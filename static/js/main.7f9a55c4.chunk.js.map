{"version":3,"sources":["layouts/channels.jsx","components/searchBox.jsx","components/firstCharOfName.jsx","components/filterMenuForThreads.jsx","services/httpUtil.js","components/helper.js","components/messageContent.jsx","components/showCommentReply.jsx","components/inputText.jsx","layouts/messageInfo.jsx","components/contactProfile.jsx","components/contactDetails.jsx","layouts/customer.jsx","layouts/threads.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBarHeight","alignItems","justifyContent","backgroundColor","palette","primary","main","mixins","toolbar","menuButton","width","height","menuButtonHide","hide","drawer","flexFlow","flexShrink","whiteSpace","drawerOpen","overflowY","transition","transitions","create","easing","sharp","duration","enteringScreen","transitionTimingFunction","transitionDuration","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","list","paddingLeft","minWidth","textInList","fontSize","padding","iconInList","link","marginTop","channelsSection","flex","Channels","props","classes","React","useState","open","setOpen","Drawer","variant","className","clsx","paper","IconButton","color","aria-label","onClick","status","refetch","style","margin","Typography","align","Divider","CircularProgress","channels","List","map","ch","index","ListItem","button","key","id","selected","selectedChannelId","event","channelID","onSelectedChannelChange","ListItemIcon","Badge","max","badgeContent","count","ListItemText","name","boxShadow","input","SearchBox","Paper","iconButton","onToggle","onSubmit","e","preventDefault","onSearchQueryClick","InputBase","placeholder","inputProps","value","onChange","type","disabled","length","orange","dark","fade","light","small","medium","large","FirstCharOfName","size","initials","firstName","toUpperCase","lastName","Avatar","FilterMenuForThreads","anchorEl","setAnchorEl","text","setText","threadStatuses","threadStatusesStatus","useEffect","handleClose","currentTarget","textContent","Button","aria-controls","aria-haspopup","endIcon","keepMounted","Boolean","onClose","MenuItem","onMenuChange","fetchData","url","a","token","localStorage","getItem","header","Headers","append","requestOptions","method","headers","redirect","fetch","process","result","json","totalCount","data","results","console","log","sendData","body","JSON","stringify","refreshRoot","flexDirection","refreshButton","showDate","date","Date","toLocaleString","RefresherComponent","handleRefresh","card","marginLeft","avatar","MessageContent","content","document","getElementById","message","scrollHeight","clientHeight","isOverflow","setIsOverflow","showMore","setShowMore","Card","CardHeader","createdBy","charAt","title","subheader","createdDate","CardContent","wordBreak","dangerouslySetInnerHTML","__html","isOnlyOne","maxHeight","overflow","i","maxWidth","marginRight","border","borderRadius","commentText","textAlign","secondary","ShowCommentReply","wordWrap","TabPanel","children","other","Box","component","role","hidden","aria-labelledby","p","a11yProps","rootText","textInput","editor","overflowWrap","tab","minHeight","replyTab","commentTab","appBarSection","sendButton","InputText","threadStatus","indexValue","setIndexValue","EditorState","createEmpty","replyState","setReplyState","commentState","setCommentState","AppBar","position","Tabs","newValue","Tab","label","getCurrentContent","convertToRaw","blocks","draftToHtml","visibility","onIsSendingMessage","threadId","messagesRefresh","editorState","onEditorStateChange","editorClassName","options","inline","inDropdown","undefined","dropdownClassName","grow","flexGrow","messagesSection","paddingBottom","cardRoot","MessageInfo","threadRefetch","selectedThread","onChangeStatus","isChangingThreadStatus","setIsOnlyOne","assigneeMenuAnchorEl","setAssigneeMenuAnchorEl","statusMenuAnchorEl","setStatusMenuAnchorEl","userAssignee","setUserAssignee","listOfFilteredUsers","setListOfFilteredUsers","changeAssigneeStatus","setChangeAssigneeStatus","totalMessagesCount","setTotalMessagesCount","isSendingMessage","setIsSendingMessage","queryKey","page","useInfiniteQuery","queryFn","config","getFetchMore","lastGroup","allGroups","refetchOnWindowFocus","enabled","messages","messagesStatus","fetchMoreMessages","fetchMore","canFetchMoreMessages","canFetchMore","isFetchingMoreMessages","isFetchingMore","useQuery","staleTime","threadsStatuses","threadsStatusesStatus","selectedAssignee","setSelectedAssignee","assignee","handleAssigneeClose","users","usersStatus","userId","username","filteredUsers","upperCaseUserAssignee","filter","user","indexOf","email","Toolbar","cursor","ts","StyledMenu","TextField","target","fullWidth","changeAssignee","msgGroup","Fragment","msg","onEnter","state","withStyles","elevation","getContentAnchorEl","verticalAlign","ContactProfile","selectedContact","contactFirstName","contactLastName","heading","typography","pxToRem","flexBasis","scroll","ContactDetails","panel","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","expandIcon","AccordionDetails","telephone","companyName","Alert","appbarHieght","down","customerInfoSection","paddingTop","Customer","Contacts","openDrawer","setOpenDrawer","openSnackbar","setOpenSnackbar","anchor","Fade","in","timeout","enter","exit","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reason","severity","background","listSection","ul","searchInputOpen","searchInputClose","tools","space","threads","messageInfo","Threads","setFilter","setIsChangingThreadStatus","showSearchInput","setShowSearchInput","searchQuery","setSearchQuery","searchByQuery","setSearchByQuery","totalThreadsCount","setTotalThreadsCount","window","innerHeight","windowHeight","setWindowHeight","addEventListener","Infinity","fetchedThreads","threadsStatus","fetchMoreThreads","canFetchMoreThreads","isFetchingMoreThreads","handleToggleSearchInput","setSelectedThread","axis","resizeHandles","Zoom","selectedType","show","Array","Skeleton","threadsGroup","thread","ListItemAvatar","contacts","subject","tag","smallScreenSection","backdropRoot","justify","backdrop","zIndex","App","isSmallScreen","useMediaQuery","selectedChannelID","setSelectedChannelID","fetchedChannels","channelsStatus","channelsRefetch","FormData","then","response","setItem","parse","catch","error","CssBaseline","location","hostname","match","setDefaultTranslations","en","fr","setDefaultLanguage","createMuiTheme","amber","ReactDOM","render","ThemeProvider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f9a55c4.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport { Typography } from \"@material-ui/core\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  menuButtonHide: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    display: \"flex\",\n    flexFlow: \"column\",\n    height: \"100vh\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    overflowY: \"auto\",\n\n    // backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    transitionTimingFunction: \"cubic-bezier(0.6, -0.28, 0.74, 0.05)\",\n    transitionDuration: \"500ms\",\n  },\n  drawerClose: {\n    // backgroundColor: \"#ffffff\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  list: {\n    paddingLeft: 8,\n    minWidth: 5,\n  },\n  textInList: {\n    fontSize: 8,\n    padding: -10,\n  },\n  iconInList: {\n    minWidth: 35,\n  },\n  link: {\n    marginTop: 80,\n  },\n  channelsSection: {\n    flex: \"1\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n\nconst Channels = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChannelClick = (event, channelID) => {\n    props.onSelectedChannelChange(channelID);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.appBarHeight}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={props.status === \"error\" ? props.refetch : handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          {props.status === \"error\" ? <RefreshIcon /> : <MenuIcon />}\n        </IconButton>\n        <div\n          className={clsx({\n            [classes.hide]: !open,\n          })}\n          style={{ margin: \"auto\" }}\n        >\n          <Typography variant=\"h5\" align=\"center\">\n            Channel\n          </Typography>\n        </div>\n\n        <IconButton\n          className={clsx(classes.menuButtonHide, {\n            [classes.hide]: !open,\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n\n      <div className={classes.channelsSection}>\n        <Divider />\n        {props.status === \"error\" ? (\n          <div>Failed to load channels</div>\n        ) : props.status === \"loading\" ? (\n          <CircularProgress />\n        ) : props.status === \"success\" && props.channels ? (\n          <List>\n            {props.channels.map((ch, index) => (\n              <ListItem\n                button\n                className={classes.list}\n                key={ch.id}\n                selected={props.selectedChannelId === ch.id}\n                onClick={(event) => handleChannelClick(event, ch.id)}\n              >\n                <ListItemIcon className={classes.iconInList}>\n                  <Badge color=\"secondary\" max={99} badgeContent={ch.count}>\n                    <MailIcon />\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText\n                  primary={ch.name}\n                  className={classes.textInList}\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n          <div>Error</div>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n\nexport default Channels;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: \"2px 2px\",\n    backgroundColor: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    boxShadow: \"0px 0px 0px 0px\",\n  },\n  input: {\n    // marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n}));\n\nconst SearchBox = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"menu\"\n        onClick={props.onToggle}\n      >\n        <CancelIcon />\n      </IconButton>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          props.onSearchQueryClick();\n        }}\n        style={{ display: \"flex\", width: \"100%\" }}\n      >\n        <InputBase\n          className={classes.input}\n          placeholder=\"Search...\"\n          inputProps={{ \"aria-label\": \"search threads\" }}\n          value={props.value}\n          onChange={props.onChange}\n        />\n        <IconButton\n          type=\"submit\"\n          aria-label=\"search\"\n          // onClick={props.onSearchQueryClick}\n          disabled={!props.value || props.value.length < 1}\n        >\n          <SearchIcon />\n        </IconButton>\n      </form>\n    </Paper>\n  );\n};\nexport default SearchBox;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  orange: {\n    color: theme.palette.primary.dark,\n    backgroundColor: fade(theme.palette.primary.light, 0.5)\n  },\n  small: {\n    fontSize: theme.spacing(2),\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  medium: {\n    fontSize: theme.spacing(5),\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  large: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    fontSize: theme.spacing(8)\n  }\n}));\n\nconst FirstCharOfName = props => {\n  const classes = useStyles();\n  let size;\n  switch (props.size) {\n    case \"small\":\n      size = classes.small;\n      break;\n    case \"medium\":\n      size = classes.medium;\n      break;\n    case \"large\":\n    default:\n      size = classes.large;\n      break;\n  }\n  var initials =\n    props.firstName[0].toUpperCase() + \"\" + props.lastName[0].toUpperCase();\n  return (\n    <div className={classes.root}>\n      <Avatar className={`${classes.orange} ${size}`}>{initials}</Avatar>\n    </div>\n  );\n};\n\nexport default FirstCharOfName;\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function FilterMenuForThreads(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [text, setText] = React.useState(\"\");\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const { threadStatuses, threadStatusesStatus } = props;\n\n  useEffect(() => {\n    if (threadStatusesStatus === \"success\" && threadStatuses.length > 0) {\n      setText(threadStatuses[0]);\n    }\n  }, [threadStatuses, threadStatusesStatus]);\n\n  const handleClose = (event) => {\n    if (event.currentTarget.textContent) {\n      setText(event.currentTarget.textContent);\n    } else if (\n      threadStatusesStatus === \"success\" &&\n      threadStatuses.length > 0\n    ) {\n      setText(threadStatuses[0]);\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      {threadStatusesStatus === \"success\" ? (\n        <div>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            endIcon={<ArrowDropDownIcon />}\n          >\n            {text}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {threadStatuses &&\n              threadStatuses.map((key) => {\n                return (\n                  <MenuItem\n                    key={key}\n                    onClick={(event) => {\n                      handleClose(event);\n                      props.onMenuChange(`${key}`);\n                    }}\n                  >\n                    {key}\n                  </MenuItem>\n                );\n              })}\n          </Menu>\n        </div>\n      ) : (\n        <CircularProgress color=\"secondary\" />\n      )}\n    </>\n  );\n}\n","const TOKEN =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc0FwaUtleSI6ZmFsc2UsImNyZWF0ZWRUaW1lIjoiMjAyMC0wOC0xMFQxMToxODoxOS44OTgiLCJhcHBWZXJzaW9uIjoiZGMyZjRhZSIsInJvbGVzIjpbeyJhdXRob3JpdHkiOiJST0xFX1VTRVIifSx7ImF1dGhvcml0eSI6IlJPTEVfQURNSU4ifV0sInVzZXJuYW1lIjoiYXNoa2FsYSJ9.hOIgMtvzvfKaBqMmh9bHWt5UhgFyFfAya9VEzQ4EFKI\";\n\nexport async function fetchData(url) {\n  let token = localStorage.getItem(\"TOKEN\");\n  try {\n    let header = new Headers();\n    header.append(\"x-auth-token\", token);\n\n    let requestOptions = {\n      method: \"GET\",\n      headers: header,\n      redirect: \"follow\",\n    };\n    let result = await fetch(\n      process.env.REACT_APP_API_ENDPOINT + url,\n      requestOptions\n    );\n    result = await result.json();\n    if (result.totalCount) {\n      result = { data: result.results, totalCount: result.totalCount };\n    } else {\n      result = result.results;\n    }\n    return result;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\nexport async function sendData(url, body) {\n  let token = localStorage.getItem(\"TOKEN\");\n  try {\n    let header = new Headers();\n    header.append(\"x-auth-token\", token);\n    header.append(\"Content-Type\", \"application/json\");\n\n    let requestOptions = {\n      method: \"POST\",\n      headers: header,\n      redirect: \"follow\",\n      body: JSON.stringify(body),\n    };\n    let result = await fetch(\n      process.env.REACT_APP_API_ENDPOINT + url,\n\n      requestOptions\n    );\n    return result;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\n// const token =\n//   \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc0FwaUtleSI6ZmFsc2UsImNyZWF0ZWRUaW1lIjoiMjAyMC0wNy0xNVQxNTo1MzoxOC44MjkiLCJhcHBWZXJzaW9uIjoiZjA3OTFmMSIsInJvbGVzIjpbeyJhdXRob3JpdHkiOiJST0xFX1VTRVIifSx7ImF1dGhvcml0eSI6IlJPTEVfQURNSU4ifV0sInVzZXJuYW1lIjoiYXNoa2FsYSJ9.tEto1BQm2y4SECDk9u-o17kPt3z_sV618Z5uLDagMyY\";\n// export async function fetchData(url, method = \"FETCH\", body = undefined) {\n//   try {\n//     url = encodeURI(process.env.REACT_APP_API_ENDPOINT + url);\n//     const response = await fetch(url, {\n//       method: method,\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//         \"x-auth-token\": `${token}`,\n//       },\n//       ...(body && { body: JSON.stringify(body) }),\n//     });\n//     if (response.ok) {\n//       // 204 doesn't have any content\n//       if (response.status === 204) {\n//         return true;\n//       } else {\n//         return response.json();\n//       }\n//     } else {\n//       if (response.status === 401) {\n//         //unauthorized\n//         throw Error(\"unauthorized/reLogin\");\n//       }\n//       throw Error(response.statusText);\n//     }\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles((theme) => ({\n  refreshRoot: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  refreshButton: {\n    minWidth: \"150px\",\n  },\n}));\n\nexport function showDate(date) {\n  let showDate = new Date(date);\n  if (showDate === \"Invalid Date\") {\n    return date;\n  }\n  return showDate.toLocaleString();\n}\n\nexport const RefresherComponent = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.refreshRoot}>\n      <h3>Something went Wrong!</h3>\n      <Button\n        className={classes.refreshButton}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.handleRefresh}\n        endIcon={<RefreshIcon />}\n      >\n        Refresh\n      </Button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport { showDate } from \"./helper\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: \"93%\",\n    marginLeft: \"5%\",\n    marginTop: \"10px\",\n    // maxHeight: \"30%\",\n    overflowY: \"auto\",\n    backgroundColor: \"#fafafa\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  header: {\n    backgroundColor: theme.palette.primary,\n    color: \"white\",\n  },\n}));\n\nexport default function MessageContent(props) {\n  const classes = useStyles();\n  let content = document.getElementById(`content-${props.message.id}`);\n  const [isOverflow, setIsOverflow] = useState(\n    content && content.scrollHeight > content.clientHeight ? true : false\n  );\n  useEffect(() => {\n    setIsOverflow(\n      content && content.scrollHeight > content.clientHeight ? true : false\n    );\n    return () => (content = null);\n  }, [content]);\n\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {props.message.createdBy\n              ? `${props.message.createdBy.firstName.charAt(\n                  0\n                )}${props.message.createdBy.lastName.charAt(0)}`\n              : \"?\"}\n          </Avatar>\n        }\n        title={\n          <Typography variant=\"h6\" color=\"primary\">\n            {props.message.createdBy\n              ? `${props.message.createdBy.firstName} ${props.message.createdBy.lastName}`\n              : \"?\"}\n          </Typography>\n        }\n        subheader={\n          <Typography color=\"secondary\">\n            {showDate(props.message.createdDate)}\n          </Typography>\n        }\n        className={classes.header}\n      />\n      <CardContent style={{ wordBreak: \"break-word\" }}>\n        <div id={`container-${props.message.id}`}>\n          <div\n            id={`content-${props.message.id}`}\n            dangerouslySetInnerHTML={{ __html: props.message.body }}\n            style={{\n              whiteSpace: \"normal\",\n              ...(!showMore && !props.isOnlyOne\n                ? { maxHeight: \"370px\" }\n                : null),\n              ...(!showMore && !props.isOnlyOne\n                ? { overflow: \"hidden\" }\n                : null),\n            }}\n          />\n          {!props.isOnlyOne && isOverflow && (\n            <div\n              style={{\n                marginTop: \"10px\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button onClick={() => setShowMore((i) => !i)} variant=\"outlined\">\n                {showMore ? \"show less\" : \"show more\"}\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { showDate } from \"./helper\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: \"70%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"10px\",\n    overflowY: \"hidden\",\n    border: \"2px solid #ffeb00\",\n    borderRadius: \"9px 9px 9px 9px\",\n    backgroundColor: \"#fef8f0\",\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n    wordBreak: \"break-word\",\n  },\n  commentText: {\n    padding: 2,\n    textAlign: \"center\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShowCommentReply(props) {\n  const classes = useStyles();\n  let content = document.getElementById(`content-${props.message.id}`);\n  const [isOverflow, setIsOverflow] = useState(\n    content && content.scrollHeight > content.clientHeight ? true : false\n  );\n\n  useEffect(() => {\n    setIsOverflow(\n      content && content.scrollHeight > content.clientHeight ? true : false\n    );\n  }, [content]);\n\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {props.message.createdBy\n              ? `${props.message.createdBy.firstName.charAt(\n                  0\n                )}${props.message.createdBy.lastName.charAt(0)}`\n              : \"?\"}\n          </Avatar>\n        }\n        title={\n          <Typography variant=\"h6\" color=\"secondary\">\n            {props.message.createdBy\n              ? `${props.message.createdBy.firstName} ${props.message.createdBy.lastName}`\n              : \"?\"}\n          </Typography>\n        }\n        subheader={\n          <Typography color=\"primary\">\n            {showDate(props.message.createdDate)}\n          </Typography>\n        }\n      />\n      <CardContent className={classes.content}>\n        <div id={`container-${props.message.id}`}>\n          <div\n            id={`content-${props.message.id}`}\n            dangerouslySetInnerHTML={{ __html: props.message.body }}\n            style={{\n              whiteSpace: \"normal\",\n              ...(!showMore && !props.isOnlyOne\n                ? { maxHeight: \"370px\" }\n                : null),\n              ...(!showMore && !props.isOnlyOne\n                ? { overflow: \"hidden\" }\n                : null),\n              wordWrap: \"break-word\",\n            }}\n          />\n          {!props.isOnlyOne && isOverflow && (\n            <div\n              style={{\n                marginTop: \"10px\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button onClick={() => setShowMore((i) => !i)} variant=\"outlined\">\n                {showMore ? \"show less\" : \"show more\"}\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { convertToRaw, EditorState } from \"draft-js\";\n\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { sendData } from \"../services/httpUtil\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Box\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={1}>{children}</Box>}\n    </Box>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n  rootText: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    textInput: {\n      overflowY: \"hidden\",\n    },\n  },\n  editor: {\n    padding: \"0px 5px\",\n    maxHeight: \"30vh\",\n    overflow: \"auto\",\n    maxWidth: \"100%\",\n    whiteSpace: \"prewrap\",\n    overflowWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  tab: {\n    // flex: \"1\",\n    // overflow: \"auto\",\n    minHeight: \"160px\",\n    maxWidth: \"100%\",\n  },\n  replyTab: {\n    backgroundColor: \"#fafafa\",\n  },\n  commentTab: {\n    backgroundColor: \"#fef8f0\",\n  },\n  appBarSection: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  sendButton: {\n    marginLeft: \"auto\",\n    minWidth: \"100px\",\n    marginRight: \"10px\",\n  },\n}));\n\nexport default function InputText(props) {\n  const classes = useStyles();\n  const [indexValue, setIndexValue] = useState(\n    props.threadStatus === \"CLOSED\" || props.threadStatus === \"COMPLETED\"\n      ? 1\n      : 0\n  );\n  const [replyState, setReplyState] = useState(EditorState.createEmpty());\n  const [commentState, setCommentState] = useState(EditorState.createEmpty());\n  const handleChange = (event, newValue) => {\n    setIndexValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBarSection}>\n        <Tabs\n          value={indexValue}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab\n            label=\"Reply\"\n            {...a11yProps(0)}\n            disabled={\n              props.threadStatus === \"CLOSED\" ||\n              props.threadStatus === \"COMPLETED\"\n            }\n          />\n          <Tab label=\"Comment\" {...a11yProps(1)} />\n        </Tabs>\n        <Button\n          variant=\"contained\"\n          endIcon={<SendIcon />}\n          className={classes.sendButton}\n          disabled={\n            (indexValue === 0 &&\n              replyState &&\n              replyState.getCurrentContent() &&\n              convertToRaw(replyState.getCurrentContent()).blocks[0].text <\n                1) ||\n            (indexValue === 1 &&\n              commentState &&\n              commentState.getCurrentContent() &&\n              convertToRaw(commentState.getCurrentContent()).blocks[0].text < 1)\n          }\n          onClick={async () => {\n            let body = {\n              body:\n                indexValue === 0\n                  ? draftToHtml(convertToRaw(replyState.getCurrentContent()))\n                  : draftToHtml(convertToRaw(commentState.getCurrentContent())),\n              type: indexValue === 0 ? \"EMAIL\" : \"COMMENT\",\n              visibility: \"PUBLIC\",\n            };\n            try {\n              props.onIsSendingMessage(true);\n              await sendData(`threads/${props.threadId}/messages`, body);\n              props.messagesRefresh();\n            } catch (error) {\n              console.log(error);\n            }\n            setReplyState(EditorState.createEmpty());\n            setCommentState(EditorState.createEmpty());\n            props.onIsSendingMessage(false);\n          }}\n        >\n          Send\n        </Button>\n      </AppBar>\n      <TabPanel\n        id=\"reply-input-section\"\n        value={indexValue}\n        index={0}\n        className={clsx(classes.tab, classes.replyTab)}\n      >\n        <Editor\n          editorState={replyState}\n          onEditorStateChange={(text) => {\n            setReplyState(text);\n          }}\n          editorClassName={classes.editor}\n          toolbar={{\n            options: [\"inline\", \"link\", \"list\"],\n            inline: {\n              inDropdown: false,\n              className: undefined,\n              component: undefined,\n              dropdownClassName: undefined,\n              options: [\"bold\", \"italic\", \"underline\"],\n            },\n          }}\n        />\n      </TabPanel>\n      <TabPanel\n        id=\"comment-input-section\"\n        value={indexValue}\n        index={1}\n        className={clsx(classes.tab, classes.commentTab)}\n      >\n        <Editor\n          editorState={commentState}\n          onEditorStateChange={(text) => {\n            setCommentState(text);\n          }}\n          editorClassName={classes.editor}\n          toolbar={{\n            options: [\"inline\", \"link\", \"list\"],\n            inline: {\n              inDropdown: false,\n              className: undefined,\n              component: undefined,\n              dropdownClassName: undefined,\n              options: [\"bold\", \"italic\", \"underline\"],\n            },\n          }}\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchData, sendData } from \"../services/httpUtil\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport MessageContent from \"../components/messageContent\";\nimport ShowCommentReply from \"../components/showCommentReply\";\nimport InputText from \"../components/inputText\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { RefresherComponent } from \"../components/helper\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Waypoint } from \"react-waypoint\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { ResizableBox } from \"react-resizable\";\nimport \"../components/style/styles.css\";\n// import \"react-resizable/css/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n  grow: {\n    flexGrow: 1,\n    overflow: \"auto\",\n  },\n  input: {\n    width: \"100%\",\n    overflow: \"auto\",\n  },\n  messagesSection: {\n    flex: \"1\",\n    overflow: \"auto\",\n    paddingBottom: \"5px\",\n  },\n  main: {\n    flex: \"1\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    overflow: \"auto\",\n  },\n  cardRoot: {\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\n    boxShadow: \"0px 0px 0px 0px\",\n    height: \"64px\",\n  },\n}));\n\nconst PAGE_SIZE = 5;\n\nexport default function MessageInfo({\n  threadRefetch,\n  selectedThread,\n  onChangeStatus,\n  isChangingThreadStatus,\n}) {\n  const classes = useStyles();\n  const [isOnlyOne, setIsOnlyOne] = useState(false);\n  const [assigneeMenuAnchorEl, setAssigneeMenuAnchorEl] = useState(null);\n  const [statusMenuAnchorEl, setStatusMenuAnchorEl] = useState(null);\n  const [userAssignee, setUserAssignee] = useState(\"\");\n  const [listOfFilteredUsers, setListOfFilteredUsers] = useState([]);\n  const [changeAssigneeStatus, setChangeAssigneeStatus] = useState(\"\");\n  const [totalMessagesCount, setTotalMessagesCount] = useState(0);\n  const [isSendingMessage, setIsSendingMessage] = useState(false);\n  async function getMoreMessages(queryKey, page = 0) {\n    let data = await fetchData(\n      `threads/${selectedThread?.id}/messages?page=${page}&pageSize=${PAGE_SIZE}`\n    );\n    setTotalMessagesCount(data.totalCount);\n    return { data: data.data, page };\n  }\n\n  const {\n    data: messages,\n    status: messagesStatus,\n    refetch: messagesRefresh,\n    fetchMore: fetchMoreMessages,\n    canFetchMore: canFetchMoreMessages,\n    isFetchingMore: isFetchingMoreMessages,\n  } = useInfiniteQuery({\n    queryKey: `threads/${selectedThread?.id}/messages`,\n    queryFn: getMoreMessages,\n    config: {\n      getFetchMore: (lastGroup, allGroups) =>\n        lastGroup.page * PAGE_SIZE >= totalMessagesCount\n          ? false\n          : lastGroup.page + 1,\n      refetchOnWindowFocus: false,\n      enabled: selectedThread ? true : false,\n    },\n  });\n\n  const { data: threadsStatuses, status: threadsStatusesStatus } = useQuery({\n    queryKey: `threads/status`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n      staleTime: 50000,\n    },\n  });\n\n  const [selectedAssignee, setSelectedAssignee] = useState();\n  useEffect(() => {\n    setSelectedAssignee(\n      selectedThread &&\n        selectedThread.assignee &&\n        selectedThread.assignee.firstName\n        ? `${selectedThread.assignee.firstName} ${selectedThread.assignee.lastName}`\n        : \"Unassigned\"\n    );\n  }, [selectedThread]);\n\n  const handleAssigneeClick = (event) => {\n    setAssigneeMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleAssigneeClose = () => {\n    setAssigneeMenuAnchorEl(null);\n  };\n\n  const { data: users, status: usersStatus } = useQuery({\n    queryKey: `users`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n    },\n  });\n\n  async function changeAssignee(userId, username) {\n    setChangeAssigneeStatus(\"loading\");\n    try {\n      await sendData(\n        `reassign?assigneeId=${userId}&threadId=${selectedThread.id}`\n      );\n      setChangeAssigneeStatus(\"success\");\n      //---in case of success set the assignee\n      setSelectedAssignee(username);\n      threadRefetch();\n    } catch (error) {\n      setChangeAssigneeStatus(\"error\");\n      console.log(error);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    let filteredUsers;\n    if (userAssignee.length > 2 && users && users.length > 0) {\n      let upperCaseUserAssignee = userAssignee.toUpperCase();\n      filteredUsers = users.filter((user) => {\n        if (user.firstName.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        if (user.lastName.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        if (user.email.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        return false;\n      });\n      setListOfFilteredUsers(filteredUsers);\n    } else {\n      setListOfFilteredUsers([]);\n    }\n  }, [userAssignee, users]);\n\n  useEffect(() => {\n    setIsOnlyOne(false);\n    if (messages && messages[0].data.length === 1) {\n      setIsOnlyOne(true);\n    }\n  }, [messages]);\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {messages && messages[0].data.length > 0 ? (\n            <>\n              {usersStatus === \"loading\" ||\n              changeAssigneeStatus === \"loading\" ? (\n                <CircularProgress color=\"secondary\" />\n              ) : (\n                <Card className={classes.cardRoot}>\n                  <CardHeader\n                    style={{ cursor: \"pointer\" }}\n                    avatar={<AccountBoxIcon />}\n                    title={Boolean(assigneeMenuAnchorEl) ? null : \"Assignee\"}\n                    subheader={\n                      Boolean(assigneeMenuAnchorEl) ? null : selectedAssignee\n                    }\n                    onClick={handleAssigneeClick}\n                  />\n                </Card>\n              )}\n\n              <div className={classes.grow} />\n              {threadsStatusesStatus === \"success\" &&\n              threadsStatuses.length > 0 ? (\n                <Button\n                  aria-controls=\"status-menu-button\"\n                  aria-haspopup=\"true\"\n                  onClick={(e) => setStatusMenuAnchorEl(e.currentTarget)}\n                  endIcon={<ArrowDropDownIcon />}\n                >\n                  {selectedThread.status}\n                </Button>\n              ) : (\n                <CircularProgress color=\"secondary\" />\n              )}\n\n              <Menu\n                id=\"status-menu\"\n                anchorEl={statusMenuAnchorEl}\n                keepMounted={false}\n                open={Boolean(statusMenuAnchorEl)}\n                onClose={() => setStatusMenuAnchorEl(null)}\n              >\n                {threadsStatuses.map((ts) => {\n                  if (ts === selectedThread.status) return null;\n                  return (\n                    <MenuItem\n                      key={ts}\n                      onClick={() => {\n                        onChangeStatus(ts);\n                        setStatusMenuAnchorEl(null);\n                      }}\n                    >\n                      {`Mark as ${ts}`}\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n              {/* ---- */}\n\n              <StyledMenu\n                id=\"simple-menu\"\n                anchorEl={assigneeMenuAnchorEl}\n                keepMounted={false}\n                open={Boolean(assigneeMenuAnchorEl)}\n                onClose={handleAssigneeClose}\n                style={{\n                  marginLeft: \"45px\",\n                  marginTop: \"-10px\",\n                }}\n              >\n                <div style={{ padding: \"2px\" }}>\n                  <TextField\n                    placeholder=\"User\"\n                    value={userAssignee}\n                    onChange={(e) => setUserAssignee(e.target.value)}\n                    fullWidth\n                  />\n                </div>\n                {usersStatus === \"loading\" ? (\n                  <CircularProgress />\n                ) : listOfFilteredUsers && listOfFilteredUsers.length > 0 ? (\n                  listOfFilteredUsers.map((user) => {\n                    return (\n                      <div\n                        key={user.id}\n                        style={{\n                          backgroundColor: \"white\",\n                          border: \"1px solid #ffc107\",\n                        }}\n                      >\n                        <MenuItem\n                          onClick={(e) => {\n                            //TODO: set Assignee to selected user\n                            changeAssignee(\n                              user.id,\n                              `${user.firstName} ${user.lastName}`\n                            );\n                            handleAssigneeClose();\n                          }}\n                        >\n                          <Card style={{ boxShadow: \"none\", width: \"100%\" }}>\n                            <CardHeader\n                              avatar={<AccountBoxIcon />}\n                              title={`${user.firstName} ${user.lastName}`}\n                              subheader={user.email}\n                            />\n                          </Card>\n                        </MenuItem>\n                      </div>\n                    );\n                  })\n                ) : null}\n              </StyledMenu>\n            </>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n\n      {isChangingThreadStatus ? (\n        <div style={{ margin: \"auto\" }}>\n          <CircularProgress />\n        </div>\n      ) : messages && messages.length > 0 ? (\n        <div className={classes.main}>\n          <div className={classes.messagesSection}>\n            {messages.map((msgGroup, i) => {\n              return (\n                <React.Fragment key={i}>\n                  {msgGroup.data &&\n                    msgGroup.data.map((msg) => {\n                      switch (msg.type) {\n                        case \"EMAIL\":\n                          return (\n                            <MessageContent\n                              key={msg.id}\n                              message={msg}\n                              isOnlyOne={isOnlyOne}\n                            />\n                          );\n                        case \"COMMENT\":\n                        default:\n                          return (\n                            <ShowCommentReply\n                              key={msg.id}\n                              message={msg}\n                              isOnlyOne={isOnlyOne}\n                            />\n                          );\n                      }\n                    })}\n                </React.Fragment>\n              );\n            })}\n            {!isFetchingMoreMessages &&\n            canFetchMoreMessages * PAGE_SIZE < totalMessagesCount ? (\n              <Waypoint onEnter={() => fetchMoreMessages()} />\n            ) : isFetchingMoreMessages ? (\n              <div\n                style={{\n                  margin: \"10px 0px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <CircularProgress />\n              </div>\n            ) : (\n              <h4\n                style={{\n                  textAlign: \"center\",\n                  color: \"grey\",\n                }}\n              >\n                end of the list\n              </h4>\n            )}\n          </div>\n          <div className={classes.input}>\n            <InputText\n              threadStatus={selectedThread.status}\n              threadId={selectedThread.id}\n              messagesRefresh={messagesRefresh}\n              onIsSendingMessage={(state) => setIsSendingMessage(state)}\n            />\n          </div>\n        </div>\n      ) : messagesStatus === \"loading\" || isSendingMessage ? (\n        <div style={{ margin: \"auto\" }}>\n          <CircularProgress />\n        </div>\n      ) : messagesStatus === \"error\" ? (\n        <RefresherComponent handleRefresh={messagesRefresh} />\n      ) : (\n        <h2 style={{ textAlign: \"center\" }}>Select a thread to see messages</h2>\n      )}\n    </div>\n  );\n}\n\nconst StyledMenu = withStyles({\n  paper: {\n    backgroundColor: \"#ffffff00\",\n  },\n})((props) => <Menu elevation={0} getContentAnchorEl={null} {...props} />);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    verticalAlign: \"middle\",\n    width: \"100%\",\n  },\n  avatar: {\n    height: \"85px\",\n    width: \"85px\",\n    backgroundColor: theme.palette.primary.main,\n    fontSize: \"40px\",\n  },\n}));\n\nconst ContactProfile = (props) => {\n  const classes = useStyles();\n  const { contactFirstName, contactLastName, email } = props.selectedContact;\n  if (!props.selectedContact) return null;\n  return (\n    <div className={classes.root}>\n      {contactFirstName && contactLastName ? (\n        <Avatar\n          className={classes.avatar}\n        >{`${contactFirstName[0]}${contactLastName[0]}`}</Avatar>\n      ) : null}\n\n      <Typography variant=\"h6\">{`${contactFirstName} ${contactLastName}`}</Typography>\n      <Typography variant=\"subtitle1\">{email}</Typography>\n    </div>\n  );\n};\nexport default ContactProfile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flex: \"1\",\n    overflow: \"auto\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  scroll: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // width: \"inherit\",\n    maxWidth: \"90%\",\n  },\n}));\n\nexport default function ContactDetails(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(\"panel1\");\n  const { selectedContact } = props;\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          style={{ backgroundColor: \"#d4d4d4\" }}\n        >\n          <Typography className={classes.heading}>\n            About this contact\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <div>\n            <Typography variant=\"subtitle1\">First Name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.contactFirstName\n                ? selectedContact.contactFirstName\n                : \"Unknown\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Last Name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.contactLastName\n                ? selectedContact.contactLastName\n                : \"Unknown\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Email:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.email\n                ? selectedContact.email\n                : \"No Email Address\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Phone number:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.telephone\n                ? selectedContact.telephone\n                : \"No Phone Number\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Company name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.companyName\n                ? selectedContact.companyName\n                : \"No Company Name\"}\n            </Typography>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Fade from \"@material-ui/core/Fade\";\nimport ContactProfile from \"../components/contactProfile\";\nimport ContactDetails from \"../components/contactDetails\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst drawerWidth = \"20%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appbarHieght: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50vh\",\n    },\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    transitionTimingFunction: \"cubic-bezier(0.6, -0.28, 0.74, 0.05)\",\n    transitionDuration: \"500ms\",\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(4) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n  },\n  customerInfoSection: {\n    paddingTop: \"5px\",\n    flex: \"1\",\n    overflow: \"auto\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n}));\n\nconst Customer = ({ Contacts }) => {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const selectedContact = Contacts && Contacts[0];\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  useEffect(() => {\n    if (!selectedContact) {\n      setOpenDrawer(false);\n    } else {\n      setOpenDrawer(true);\n    }\n  }, [selectedContact]);\n\n  const handleDrawerOpen = () => {\n    !selectedContact ? setOpenSnackbar(true) : setOpenDrawer(true);\n  };\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"right\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: openDrawer,\n        [classes.drawerClose]: !openDrawer,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: openDrawer,\n          [classes.drawerClose]: !openDrawer,\n        }),\n      }}\n    >\n      <div className={classes.appbarHieght}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: openDrawer,\n          })}\n          disabled={!selectedContact || selectedContact.length < 1}\n        >\n          <PersonIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.menuButton, {\n            [classes.hide]: !openDrawer,\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronRightIcon />\n        </IconButton>\n        <div\n          className={clsx({\n            [classes.hide]: !openDrawer,\n          })}\n          style={{ margin: \"auto\" }}\n        >\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            style={{ marginRight: \"48px\" }}\n          >\n            Contact\n          </Typography>\n        </div>\n      </div>\n      <Fade\n        in={openDrawer}\n        timeout={{ enter: 1000, exit: 500 }}\n        className={clsx({\n          [classes.hide]: !openDrawer,\n        })}\n      >\n        <div\n          style={{\n            flex: \"1\",\n            overflow: \"auto\",\n            display: \"flex\",\n            flexFlow: \"column\",\n          }}\n        >\n          <div\n            className={clsx(classes.customerInfoSection, {\n              [classes.hide]: !openDrawer,\n            })}\n          >\n            <ContactProfile\n              selectedContact={selectedContact ? selectedContact : \"Unknown\"}\n            />\n            <Divider />\n            <ContactDetails\n              selectedContact={selectedContact ? selectedContact : \"Unknown\"}\n            />\n          </div>\n        </div>\n      </Fade>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n      >\n        <Alert severity=\"error\">Contact not selected</Alert>\n      </Snackbar>\n    </Drawer>\n  );\n};\n\nexport default Customer;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport SearchBox from \"../components/searchBox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FirstCharOfName from \"../components/firstCharOfName\";\nimport FilterMenuForThreads from \"../components/filterMenuForThreads\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Box from \"@material-ui/core/Box\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { fetchData, sendData } from \"../services/httpUtil\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\nimport { RefresherComponent, showDate } from \"../components/helper\";\nimport MessageInfo from \"./messageInfo\";\nimport Customer from \"./customer\";\nimport { Waypoint } from \"react-waypoint\";\nimport { ResizableBox } from \"react-resizable\";\nimport \"../components/style/styles.css\";\n// import \"react-resizable/css/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //overflow: \"hidden\",\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    height: \"calc(100vh - 66px)\",\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  searchInputOpen: {\n    width: \"80%\",\n    overflow: \"hidden\",\n    backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  searchInputClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  hide: {\n    display: \"none\",\n  },\n  tools: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: \"0px 0px 0px 0px\",\n  },\n  toolbar: {\n    // display: \"flex\",\n    // justifyContent: \"center\",\n    width: \"100%\",\n  },\n  space: {\n    flexGrow: 10,\n  },\n  threads: {\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"35vh\",\n      overflow: \"auto\",\n    },\n  },\n  messageInfo: {\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"55vh\",\n      overflow: \"auto\",\n    },\n  },\n  content: {\n    width: \"100%\",\n  },\n}));\n\nconst Threads = ({ channelID }) => {\n  const PAGE_SIZE = 10;\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const [isChangingThreadStatus, setIsChangingThreadStatus] = useState(false);\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchByQuery, setSearchByQuery] = useState(false);\n  const [totalThreadsCount, setTotalThreadsCount] = useState(0);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () =>\n      setWindowHeight(window.innerHeight)\n    );\n  }, []);\n\n  const { data: threadStatuses, status: threadStatusesStatus } = useQuery({\n    queryKey: `threads/status`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n    },\n  });\n  useEffect(() => {\n    if (threadStatusesStatus === \"success\" && threadStatuses.length > 0) {\n      setFilter(threadStatuses[0]);\n    }\n  }, [threadStatuses, threadStatusesStatus]);\n\n  async function getMoreThreads(queryKey, page = 0) {\n    let data;\n    if (searchByQuery) {\n      data = await fetchData(\n        `channels/${channelID}/threads/search?page=${page}&pageSize=${PAGE_SIZE}&searchQuery=${searchQuery}`\n      );\n    } else {\n      data = await fetchData(\n        `channels/${channelID}/threads?page=${page}&pageSize=${PAGE_SIZE}&status=${filter}`\n      );\n    }\n    setTotalThreadsCount(data.totalCount);\n    return { data: data.data, page };\n  }\n\n  const {\n    data: fetchedThreads,\n    status: threadsStatus,\n    refetch: threadRefetch,\n    fetchMore: fetchMoreThreads,\n    canFetchMore: canFetchMoreThreads,\n    isFetchingMore: isFetchingMoreThreads,\n  } = useInfiniteQuery({\n    queryKey: { searchByQuery, filter },\n    queryFn: filter.length > 0 || searchByQuery ? getMoreThreads : null,\n    config: {\n      getFetchMore: (lastGroup, allGroups) =>\n        lastGroup.page * PAGE_SIZE >= totalThreadsCount\n          ? false\n          : lastGroup.page + 1,\n      refetchOnWindowFocus: false,\n      enabled: channelID ? true : false,\n    },\n  });\n  const handleToggleSearchInput = () => {\n    setShowSearchInput(!showSearchInput);\n    setSearchByQuery(false);\n    setSearchQuery(\"\");\n  };\n\n  const [selectedThread, setSelectedThread] = useState();\n  useEffect(() => {\n    if (\n      threadsStatus === \"success\" &&\n      fetchedThreads &&\n      fetchedThreads[0].data &&\n      fetchedThreads[0].data.length > 0\n    ) {\n      setSelectedThread(fetchedThreads[0].data[0]);\n    } else {\n      setSelectedThread();\n    }\n  }, [fetchedThreads, threadsStatus]);\n\n  async function changeThreadStatus(status) {\n    setIsChangingThreadStatus(true);\n    try {\n      await sendData(`threads/${selectedThread.id}/status?status=${status}`);\n      threadRefetch();\n    } catch (error) {\n      console.log(error);\n    }\n    setIsChangingThreadStatus(false);\n  }\n\n  return (\n    <>\n      <main className={classes.content}>\n        <div className={classes.root}>\n          <ResizableBox\n            className=\"box\"\n            height={windowHeight}\n            width={300}\n            axis=\"x\"\n            resizeHandles={[\"e\"]}\n          >\n            <div>\n              <AppBar position=\"sticky\">\n                <Toolbar className={classes.toolbar}>\n                  <Zoom in={!showSearchInput}>\n                    <Paper\n                      className={clsx({\n                        [classes.tools]: !showSearchInput,\n                        [classes.hide]: showSearchInput,\n                      })}\n                    >\n                      <FilterMenuForThreads\n                        onMenuChange={(selectedType) => {\n                          setFilter(selectedType);\n                        }}\n                        threadStatuses={threadStatuses}\n                        threadStatusesStatus={threadStatusesStatus}\n                      />\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={handleToggleSearchInput}\n                        size=\"small\"\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </Paper>\n                  </Zoom>\n                  <Zoom in={showSearchInput}>\n                    <Paper\n                      className={clsx({\n                        [classes.tools]: showSearchInput,\n                        [classes.hide]: !showSearchInput,\n                      })}\n                    >\n                      <SearchBox\n                        value={searchQuery}\n                        onToggle={handleToggleSearchInput}\n                        show={showSearchInput}\n                        onChange={(e) => {\n                          setSearchQuery(e.target.value);\n                        }}\n                        onSearchQueryClick={() => {\n                          setSearchByQuery(true);\n                          threadRefetch();\n                        }}\n                      />\n                    </Paper>\n                  </Zoom>\n                </Toolbar>\n              </AppBar>\n\n              <Paper variant={\"outlined\"}>\n                <List className={classes.list}>\n                  {threadsStatus === \"loading\" ? (\n                    [...Array(20)].map((e, i) => (\n                      <React.Fragment key={i}>\n                        <ListItem alignItems=\"flex-start\" key={i}>\n                          <Box width={\"100%\"}>\n                            <Skeleton />\n                            <Skeleton width=\"60%\" />\n                          </Box>\n                        </ListItem>\n                        <Divider variant=\"middle\" component=\"li\" />\n                      </React.Fragment>\n                    ))\n                  ) : !fetchedThreads ||\n                    !fetchedThreads[0].data ||\n                    totalThreadsCount === 0 ? (\n                    <h2 style={{ textAlign: \"center\", color: \"#5b5b5b\" }}>\n                      No Thread\n                    </h2>\n                  ) : threadsStatus === \"success\" &&\n                    fetchedThreads &&\n                    fetchedThreads[0] &&\n                    fetchedThreads[0].data &&\n                    fetchedThreads[0].data.length < 1 ? (\n                    <h2 style={{ textAlign: \"center\", color: \"#5b5b5b\" }}>\n                      No Thread\n                    </h2>\n                  ) : threadsStatus === \"success\" &&\n                    fetchedThreads &&\n                    fetchedThreads.length > 0 ? (\n                    fetchedThreads.map(\n                      (threadsGroup, i) =>\n                        threadsGroup.data &&\n                        threadsGroup.data.map((thread) => {\n                          return (\n                            <React.Fragment key={thread.id}>\n                              <ListItem\n                                button\n                                alignItems=\"flex-start\"\n                                selected={selectedThread?.id === thread.id}\n                                onClick={() => setSelectedThread(thread)}\n                              >\n                                <ListItemAvatar>\n                                  <FirstCharOfName\n                                    size=\"small\"\n                                    firstName={\n                                      thread.contacts[0].contactFirstName[0]\n                                    }\n                                    lastName={\n                                      thread.contacts[0].contactLastName[0]\n                                    }\n                                  />\n                                </ListItemAvatar>\n                                <ListItemText\n                                  primary={thread.subject}\n                                  secondary={\n                                    <React.Fragment>\n                                      <Typography\n                                        component=\"span\"\n                                        variant=\"body2\"\n                                        className={classes.inline}\n                                        color=\"textPrimary\"\n                                      >\n                                        {thread.tag}\n                                        {\" - \"}\n                                      </Typography>\n                                      <Typography variant=\"caption\">\n                                        {showDate(thread.createdDate)}\n                                      </Typography>\n                                    </React.Fragment>\n                                  }\n                                />\n                              </ListItem>\n                              <Divider component=\"li\" />\n                            </React.Fragment>\n                          );\n                        })\n                    )\n                  ) : threadsStatus === \"error\" ? (\n                    <RefresherComponent handleRefresh={threadRefetch} />\n                  ) : null}\n                  {!isFetchingMoreThreads &&\n                  canFetchMoreThreads * PAGE_SIZE < totalThreadsCount ? (\n                    <Waypoint onEnter={() => fetchMoreThreads()} />\n                  ) : isFetchingMoreThreads ? (\n                    <div\n                      style={{\n                        margin: \"10px 0px\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <CircularProgress />\n                    </div>\n                  ) : null}\n                </List>\n              </Paper>\n            </div>\n          </ResizableBox>\n          <div style={{ flex: \"1\" }}>\n            <MessageInfo\n              threadRefetch={threadRefetch}\n              selectedThread={selectedThread}\n              onChangeStatus={changeThreadStatus}\n              isChangingThreadStatus={isChangingThreadStatus}\n            />\n          </div>\n        </div>\n      </main>\n      <Customer Contacts={selectedThread?.contacts} />\n    </>\n  );\n};\n\nexport default Threads;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Channels from \"./layouts/channels\";\nimport Threads from \"./layouts/threads\";\nimport { fetchData } from \"./services/httpUtil\";\nimport { useQuery } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles((theme) => ({\n  smallScreenSection: {\n    backgroundColor: \"#f1f1f1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"20%\",\n    textAlign: \"center\",\n  },\n  root: {\n    display: \"flex\",\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    height: \"100vh\",\n  },\n  backdropRoot: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n      alignItems: \"center\",\n      justify: \"center\",\n      height: \"100vh\",\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const isSmallScreen = useMediaQuery(\"(min-width:700px)\");\n  const [selectedChannelID, setSelectedChannelID] = useState();\n\n  const {\n    data: fetchedChannels,\n    status: channelsStatus,\n    refetch: channelsRefetch,\n  } = useQuery({\n    queryKey: \"channels\",\n    queryFn: fetchData,\n    config: { refetchOnWindowFocus: false },\n  });\n\n  useEffect(() => {\n    if (channelsStatus === \"success\" && fetchedChannels.length > 0) {\n      setSelectedChannelID(fetchedChannels[0].id);\n    }\n  }, [channelsStatus, fetchedChannels]);\n\n  useEffect(() => {\n    let myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    let data = new FormData();\n    data.append(\"username\", \"ashkala\");\n    data.append(\"password\", \"block-monitored-policebox\");\n\n    let requestOptions = {\n      method: \"POST\",\n      // headers: myHeaders,\n      body: data,\n      redirect: \"follow\",\n    };\n    fetch(\"https://app.rerumapp.uk/test/authenticate\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => localStorage.setItem(\"TOKEN\", JSON.parse(result).token))\n      .catch((error) => console.log(\"error in token\", error));\n  }, []);\n  if (!isSmallScreen) {\n    return (\n      <div className={classes.smallScreenSection}>\n        <h3>The page cannot be displayed on this screen</h3>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.root}>\n      {process.env.REACT_APP_ENV === \"DEV\" ? <ReactQueryDevtools /> : null}\n      <CssBaseline />\n      <Channels\n        status={channelsStatus}\n        refetch={channelsRefetch}\n        channels={fetchedChannels}\n        onSelectedChannelChange={(channelID) => {\n          setSelectedChannelID(channelID);\n        }}\n        selectedChannelId={selectedChannelID}\n      />\n\n      <Threads channelID={selectedChannelID} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"typeface-roboto\";\nimport { red, amber } from \"@material-ui/core/colors\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { setDefaultTranslations, setDefaultLanguage } from \"react-multi-lang\";\n// @ts-ignore\nimport en from \"./languages/en.json\";\n// @ts-ignore\nimport fr from \"./languages/fr.json\";\n\nsetDefaultTranslations({ en, fr });\nsetDefaultLanguage(\"en\");\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: \"#d67200\",\n      main: \"#f69321\",\n      light: \"#ffb560\",\n    },\n\n    secondary: {\n      main: amber[500],\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}