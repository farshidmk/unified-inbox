{"version":3,"sources":["layouts/channels.jsx","components/searchBox.jsx","components/firstCharOfName.jsx","components/filterMenuForThreads.jsx","services/httpUtil.js","components/helper.js","components/messageContent.jsx","components/showCommentReply.jsx","components/inputText.jsx","layouts/messageInfo.jsx","components/contactProfile.jsx","components/contactDetails.jsx","layouts/customer.jsx","layouts/threads.jsx","App.jsx","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBarHeight","alignItems","justifyContent","backgroundColor","palette","primary","main","mixins","toolbar","menuButton","width","height","menuButtonHide","hide","drawer","flexFlow","flexShrink","whiteSpace","drawerOpen","overflowY","transition","transitions","create","easing","sharp","duration","enteringScreen","transitionTimingFunction","transitionDuration","drawerClose","leavingScreen","overflowX","spacing","breakpoints","up","list","paddingLeft","minWidth","textInList","fontSize","padding","iconInList","link","marginTop","channelsSection","flex","Channels","props","classes","React","useState","open","setOpen","Drawer","variant","className","clsx","paper","IconButton","color","aria-label","onClick","status","refetch","Divider","CircularProgress","channels","List","map","ch","index","ListItem","button","key","id","selected","selectedChannelId","event","channelID","onSelectedChannelChange","ListItemIcon","Badge","max","badgeContent","count","ListItemText","name","boxShadow","input","SearchBox","Paper","iconButton","onToggle","InputBase","placeholder","inputProps","value","onChange","onSearchQueryClick","disabled","length","margin","orange","dark","fade","light","small","medium","large","FirstCharOfName","size","initials","firstName","toUpperCase","lastName","Avatar","FilterMenuForThreads","anchorEl","setAnchorEl","text","setText","threadStatuses","threadStatusesStatus","useEffect","handleClose","currentTarget","textContent","Button","aria-controls","aria-haspopup","endIcon","keepMounted","Boolean","onClose","MenuItem","onMenuChange","fetchData","url","a","token","localStorage","getItem","header","Headers","append","requestOptions","method","headers","redirect","fetch","process","result","json","totalCount","data","results","console","log","sendData","body","JSON","stringify","refreshRoot","flexDirection","refreshButton","showDate","date","Date","toLocaleString","RefresherComponent","handleRefresh","card","marginLeft","avatar","MessageContent","content","document","getElementById","message","scrollHeight","clientHeight","isOverflow","setIsOverflow","showMore","setShowMore","Card","CardHeader","assignee","charAt","title","Typography","subheader","createdDate","CardContent","dangerouslySetInnerHTML","__html","style","maxHeight","overflow","i","maxWidth","marginRight","border","borderRadius","commentText","textAlign","secondary","ShowCommentReply","TabPanel","children","other","Box","component","role","hidden","aria-labelledby","p","a11yProps","rootText","textInput","editor","overflowWrap","wordBreak","tab","minHeight","replyTab","commentTab","appBarSection","sendButton","InputText","indexValue","setIndexValue","EditorState","createEmpty","replyState","setReplyState","commentState","setCommentState","AppBar","position","Tabs","newValue","Tab","label","getCurrentContent","convertToRaw","blocks","draftToHtml","type","visibility","onIsSendingMessage","threadId","messagesRefresh","editorState","onEditorStateChange","editorClassName","options","inline","inDropdown","undefined","dropdownClassName","grow","flexGrow","messagesSection","paddingBottom","cardRoot","MessageInfo","threadRefetch","selectedThread","onChangeStatus","isChangingThreadStatus","assigneeMenuAnchorEl","setAssigneeMenuAnchorEl","statusMenuAnchorEl","setStatusMenuAnchorEl","userAssignee","setUserAssignee","listOfFilteredUsers","setListOfFilteredUsers","changeAssigneeStatus","setChangeAssigneeStatus","totalMessagesCount","setTotalMessagesCount","isSendingMessage","setIsSendingMessage","queryKey","page","useInfiniteQuery","queryFn","config","getFetchMore","lastGroup","allGroups","refetchOnWindowFocus","enabled","messages","messagesStatus","fetchMoreMessages","fetchMore","canFetchMoreMessages","canFetchMore","isFetchingMoreMessages","isFetchingMore","useQuery","staleTime","threadsStatuses","threadsStatusesStatus","selectedAssignee","setSelectedAssignee","handleAssigneeClose","users","usersStatus","userId","username","filteredUsers","upperCaseUserAssignee","filter","user","indexOf","email","Toolbar","cursor","noWrap","e","ts","StyledMenu","TextField","target","fullWidth","changeAssignee","msgGroup","Fragment","msg","onEnter","state","withStyles","elevation","getContentAnchorEl","verticalAlign","ContactProfile","selectedContact","contactFirstName","contactLastName","heading","typography","pxToRem","flexBasis","scroll","ContactDetails","panel","expanded","setExpanded","Accordion","isExpanded","AccordionSummary","expandIcon","AccordionDetails","telephone","companyName","Alert","appbarHieght","down","customerInfoSection","paddingTop","Customer","Contacts","openDrawer","setOpenDrawer","openSnackbar","setOpenSnackbar","anchor","Fade","in","timeout","enter","exit","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","reason","severity","background","listSection","ul","searchInputOpen","searchInputClose","tools","space","threads","messageInfo","Threads","setFilter","setIsChangingThreadStatus","showSearchInput","setShowSearchInput","searchQuery","setSearchQuery","searchByQuery","setSearchByQuery","window","innerHeight","windowHeight","setWindowHeight","addEventListener","fetchedThreads","threadsStatus","handleToggleSearchInput","setSelectedThread","axis","resizeHandles","Zoom","selectedType","show","Array","Skeleton","thread","badge","subject","split","push","ListItemAvatar","tag","contacts","smallScreenSection","backdropRoot","justify","backdrop","zIndex","App","isSmallScreen","useMediaQuery","selectedChannelID","setSelectedChannelID","fetchedChannels","channelsStatus","channelsRefetch","myHeaders","urlencoded","URLSearchParams","then","response","setItem","parse","catch","error","CssBaseline","location","hostname","match","setDefaultTranslations","en","fr","setDefaultLanguage","createMuiTheme","amber","ReactDOM","render","ThemeProvider","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54c291c3.chunk.js","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Badge from \"@material-ui/core/Badge\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  menuButtonHide: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    display: \"flex\",\n    flexFlow: \"column\",\n    height: \"100vh\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    overflowY: \"auto\",\n\n    // backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    transitionTimingFunction: \"cubic-bezier(0.6, -0.28, 0.74, 0.05)\",\n    transitionDuration: \"500ms\",\n  },\n  drawerClose: {\n    // backgroundColor: \"#ffffff\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  list: {\n    paddingLeft: 8,\n    minWidth: 5,\n  },\n  textInList: {\n    fontSize: 8,\n    padding: -10,\n  },\n  iconInList: {\n    minWidth: 35,\n  },\n  link: {\n    marginTop: 80,\n  },\n  channelsSection: {\n    flex: \"1\",\n    overflowY: \"auto\",\n    overflowX: \"hidden\",\n  },\n}));\n\nconst Channels = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  const handleChannelClick = (event, channelID) => {\n    props.onSelectedChannelChange(channelID);\n  };\n\n  return (\n    <Drawer\n      variant=\"permanent\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: open,\n        [classes.drawerClose]: !open,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        }),\n      }}\n    >\n      <div className={classes.appBarHeight}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={props.status === \"error\" ? props.refetch : handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: open,\n          })}\n        >\n          {props.status === \"error\" ? <RefreshIcon /> : <MenuIcon />}\n        </IconButton>\n        <IconButton\n          className={clsx(classes.menuButtonHide, {\n            [classes.hide]: !open,\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n\n      <div className={classes.channelsSection}>\n        <Divider />\n        {props.status === \"error\" ? (\n          <div>Failed to load channels</div>\n        ) : props.status === \"loading\" ? (\n          <CircularProgress />\n        ) : props.status === \"success\" && props.channels ? (\n          <List>\n            {props.channels.map((ch, index) => (\n              <ListItem\n                button\n                className={classes.list}\n                key={ch.id}\n                selected={props.selectedChannelId === ch.id}\n                onClick={(event) => handleChannelClick(event, ch.id)}\n              >\n                <ListItemIcon className={classes.iconInList}>\n                  <Badge color=\"secondary\" max={99} badgeContent={ch.count}>\n                    <MailIcon />\n                  </Badge>\n                </ListItemIcon>\n                <ListItemText\n                  primary={ch.name}\n                  className={classes.textInList}\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : (\n          <div>Error</div>\n        )}\n      </div>\n    </Drawer>\n  );\n};\n\nexport default Channels;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CancelIcon from \"@material-ui/icons/Cancel\";\nimport SearchIcon from \"@material-ui/icons/Search\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // padding: \"2px 2px\",\n    backgroundColor: theme.palette.primary.main,\n    display: \"flex\",\n    alignItems: \"center\",\n    width: \"100%\",\n    boxShadow: \"0px 0px 0px 0px\",\n  },\n  input: {\n    // marginLeft: theme.spacing(1),\n    flex: 1,\n  },\n}));\n\nconst SearchBox = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Paper className={classes.root}>\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"menu\"\n        onClick={props.onToggle}\n      >\n        <CancelIcon />\n      </IconButton>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search...\"\n        inputProps={{ \"aria-label\": \"search threads\" }}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      <IconButton\n        aria-label=\"search\"\n        onClick={props.onSearchQueryClick}\n        disabled={!props.value || props.value.length < 1}\n      >\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n};\nexport default SearchBox;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1)\n    }\n  },\n  orange: {\n    color: theme.palette.primary.dark,\n    backgroundColor: fade(theme.palette.primary.light, 0.5)\n  },\n  small: {\n    fontSize: theme.spacing(2),\n    width: theme.spacing(4),\n    height: theme.spacing(4)\n  },\n  medium: {\n    fontSize: theme.spacing(5),\n    width: theme.spacing(7),\n    height: theme.spacing(7)\n  },\n  large: {\n    width: theme.spacing(14),\n    height: theme.spacing(14),\n    fontSize: theme.spacing(8)\n  }\n}));\n\nconst FirstCharOfName = props => {\n  const classes = useStyles();\n  let size;\n  switch (props.size) {\n    case \"small\":\n      size = classes.small;\n      break;\n    case \"medium\":\n      size = classes.medium;\n      break;\n    case \"large\":\n    default:\n      size = classes.large;\n      break;\n  }\n  var initials =\n    props.firstName[0].toUpperCase() + \"\" + props.lastName[0].toUpperCase();\n  return (\n    <div className={classes.root}>\n      <Avatar className={`${classes.orange} ${size}`}>{initials}</Avatar>\n    </div>\n  );\n};\n\nexport default FirstCharOfName;\n","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nexport default function FilterMenuForThreads(props) {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [text, setText] = React.useState(\"\");\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const { threadStatuses, threadStatusesStatus } = props;\n\n  useEffect(() => {\n    if (threadStatusesStatus === \"success\" && threadStatuses.length > 0) {\n      setText(threadStatuses[0]);\n    }\n  }, [threadStatuses, threadStatusesStatus]);\n\n  const handleClose = (event) => {\n    if (event.currentTarget.textContent) {\n      setText(event.currentTarget.textContent);\n    } else if (\n      threadStatusesStatus === \"success\" &&\n      threadStatuses.length > 0\n    ) {\n      setText(threadStatuses[0]);\n    }\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      {threadStatusesStatus === \"success\" ? (\n        <div>\n          <Button\n            aria-controls=\"simple-menu\"\n            aria-haspopup=\"true\"\n            onClick={handleClick}\n            endIcon={<ArrowDropDownIcon />}\n          >\n            {text}\n          </Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={anchorEl}\n            keepMounted\n            open={Boolean(anchorEl)}\n            onClose={handleClose}\n          >\n            {threadStatuses &&\n              threadStatuses.map((key) => {\n                return (\n                  <MenuItem\n                    key={key}\n                    onClick={(event) => {\n                      handleClose(event);\n                      props.onMenuChange(`${key}`);\n                    }}\n                  >\n                    {key}\n                  </MenuItem>\n                );\n              })}\n          </Menu>\n        </div>\n      ) : (\n        <CircularProgress color=\"secondary\" />\n      )}\n    </>\n  );\n}\n","const TOKEN =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc0FwaUtleSI6ZmFsc2UsImNyZWF0ZWRUaW1lIjoiMjAyMC0wOC0xMFQxMToxODoxOS44OTgiLCJhcHBWZXJzaW9uIjoiZGMyZjRhZSIsInJvbGVzIjpbeyJhdXRob3JpdHkiOiJST0xFX1VTRVIifSx7ImF1dGhvcml0eSI6IlJPTEVfQURNSU4ifV0sInVzZXJuYW1lIjoiYXNoa2FsYSJ9.hOIgMtvzvfKaBqMmh9bHWt5UhgFyFfAya9VEzQ4EFKI\";\n\nexport async function fetchData(url) {\n  let token = localStorage.getItem(\"TOKEN\");\n  try {\n    let header = new Headers();\n    header.append(\"x-auth-token\", token);\n\n    let requestOptions = {\n      method: \"GET\",\n      headers: header,\n      redirect: \"follow\",\n    };\n    let result = await fetch(\n      process.env.REACT_APP_API_ENDPOINT + url,\n      requestOptions\n    );\n    result = await result.json();\n    if (result.totalCount) {\n      result = { data: result.results, totalCount: result.totalCount };\n    } else {\n      result = result.results;\n    }\n    return result;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\nexport async function sendData(url, body) {\n  let token = localStorage.getItem(\"TOKEN\");\n  try {\n    let header = new Headers();\n    header.append(\"x-auth-token\", token);\n    header.append(\"Content-Type\", \"application/json\");\n\n    let requestOptions = {\n      method: \"POST\",\n      headers: header,\n      redirect: \"follow\",\n      body: JSON.stringify(body),\n    };\n    let result = await fetch(\n      process.env.REACT_APP_API_ENDPOINT + url,\n\n      requestOptions\n    );\n    return result;\n  } catch (error) {\n    console.log(error);\n    throw error;\n  }\n}\n\n// const token =\n//   \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc0FwaUtleSI6ZmFsc2UsImNyZWF0ZWRUaW1lIjoiMjAyMC0wNy0xNVQxNTo1MzoxOC44MjkiLCJhcHBWZXJzaW9uIjoiZjA3OTFmMSIsInJvbGVzIjpbeyJhdXRob3JpdHkiOiJST0xFX1VTRVIifSx7ImF1dGhvcml0eSI6IlJPTEVfQURNSU4ifV0sInVzZXJuYW1lIjoiYXNoa2FsYSJ9.tEto1BQm2y4SECDk9u-o17kPt3z_sV618Z5uLDagMyY\";\n// export async function fetchData(url, method = \"FETCH\", body = undefined) {\n//   try {\n//     url = encodeURI(process.env.REACT_APP_API_ENDPOINT + url);\n//     const response = await fetch(url, {\n//       method: method,\n//       headers: {\n//         Accept: \"application/json\",\n//         \"Content-Type\": \"application/json\",\n//         \"x-auth-token\": `${token}`,\n//       },\n//       ...(body && { body: JSON.stringify(body) }),\n//     });\n//     if (response.ok) {\n//       // 204 doesn't have any content\n//       if (response.status === 204) {\n//         return true;\n//       } else {\n//         return response.json();\n//       }\n//     } else {\n//       if (response.status === 401) {\n//         //unauthorized\n//         throw Error(\"unauthorized/reLogin\");\n//       }\n//       throw Error(response.statusText);\n//     }\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst useStyles = makeStyles((theme) => ({\n  refreshRoot: {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  refreshButton: {\n    minWidth: \"150px\",\n  },\n}));\n\nexport function showDate(date) {\n  let showDate = new Date(date);\n  if (showDate === \"Invalid Date\") {\n    return date;\n  }\n  return showDate.toLocaleString();\n}\n\nexport const RefresherComponent = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.refreshRoot}>\n      <h3>Something went Wrong!</h3>\n      <Button\n        className={classes.refreshButton}\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={props.handleRefresh}\n        endIcon={<RefreshIcon />}\n      >\n        Refresh\n      </Button>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { red } from \"@material-ui/core/colors\";\nimport { showDate } from \"./helper\";\nimport { Button } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    width: \"93%\",\n    marginLeft: \"5%\",\n    marginTop: \"10px\",\n    // maxHeight: \"30%\",\n    overflowY: \"auto\",\n    backgroundColor: \"#fafafa\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  header: {\n    backgroundColor: theme.palette.primary,\n    color: \"white\",\n  },\n}));\n\nexport default function MessageContent(props) {\n  const classes = useStyles();\n  let content = document.getElementById(`content-${props.message.id}`);\n  const [isOverflow, setIsOverflow] = useState(\n    content && content.scrollHeight > content.clientHeight ? true : false\n  );\n\n  useEffect(() => {\n    setIsOverflow(\n      content && content.scrollHeight > content.clientHeight ? true : false\n    );\n  }, [content]);\n\n  const [showMore, setShowMore] = useState(false);\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {props.message.assignee\n              ? `${props.message.assignee.firstName.charAt(\n                  0\n                )}${props.message.assignee.lastName.charAt(0)}`\n              : \"?\"}\n          </Avatar>\n        }\n        title={\n          <Typography variant=\"h6\" color=\"primary\">\n            {props.message.assignee\n              ? `${props.message.assignee.firstName} ${props.message.assignee.lastName}`\n              : \"?\"}\n          </Typography>\n        }\n        subheader={\n          <Typography color=\"secondary\">\n            {showDate(props.message.createdDate)}\n          </Typography>\n        }\n        className={classes.header}\n      />\n      <CardContent>\n        <div id={`container-${props.message.id}`}>\n          <div\n            id={`content-${props.message.id}`}\n            dangerouslySetInnerHTML={{ __html: props.message.body }}\n            style={{\n              whiteSpace: \"normal\",\n              ...(!showMore ? { maxHeight: \"150px\" } : null),\n              ...(!showMore ? { overflow: \"hidden\" } : null),\n            }}\n          />\n          {isOverflow && (\n            <div\n              style={{\n                marginTop: \"10px\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button onClick={() => setShowMore((i) => !i)} variant=\"outlined\">\n                {showMore ? \"show less\" : \"show more\"}\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { showDate } from \"./helper\";\n\nconst useStyles = makeStyles((theme) => ({\n  card: {\n    maxWidth: \"70%\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    marginTop: \"10px\",\n    overflowY: \"hidden\",\n    border: \"2px solid #ffeb00\",\n    borderRadius: \"9px 9px 9px 9px\",\n    backgroundColor: \"#fef8f0\",\n  },\n  content: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  commentText: {\n    padding: 2,\n    textAlign: \"center\",\n  },\n  avatar: {\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nexport default function ShowCommentReply(props) {\n  const classes = useStyles();\n  let content = document.getElementById(`content-${props.message.id}`);\n  const [isOverflow, setIsOverflow] = useState(\n    content && content.scrollHeight > content.clientHeight ? true : false\n  );\n\n  useEffect(() => {\n    setIsOverflow(\n      content && content.scrollHeight > content.clientHeight ? true : false\n    );\n  }, [content]);\n\n  const [showMore, setShowMore] = useState(false);\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        avatar={\n          <Avatar className={classes.avatar}>\n            {props.message.assignee\n              ? `${props.message.assignee.firstName.charAt(\n                  0\n                )}${props.message.assignee.lastName.charAt(0)}`\n              : \"?\"}\n          </Avatar>\n        }\n        title={\n          <Typography variant=\"h6\" color=\"secondary\">\n            {props.message.assignee\n              ? `${props.message.assignee.firstName} ${props.message.assignee.lastName}`\n              : \"?\"}\n          </Typography>\n        }\n        subheader={\n          <Typography color=\"primary\">\n            {showDate(props.message.createdDate)}\n          </Typography>\n        }\n      />\n      <CardContent className={classes.content}>\n        <div id={`container-${props.message.id}`}>\n          <div\n            id={`content-${props.message.id}`}\n            dangerouslySetInnerHTML={{ __html: props.message.body }}\n            style={{\n              whiteSpace: \"normal\",\n              ...(!showMore ? { maxHeight: \"150px\" } : null),\n              ...(!showMore ? { overflow: \"hidden\" } : null),\n            }}\n          />\n          {isOverflow && (\n            <div\n              style={{\n                marginTop: \"10px\",\n                width: \"100%\",\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Button onClick={() => setShowMore((i) => !i)} variant=\"outlined\">\n                {showMore ? \"show less\" : \"show more\"}\n              </Button>\n            </div>\n          )}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport htmlToDraft from \"html-to-draftjs\";\nimport draftToHtml from \"draftjs-to-html\";\nimport { convertToRaw, EditorState } from \"draft-js\";\n\nimport { Editor } from \"react-draft-wysiwyg\";\nimport \"../../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\nimport { sendData } from \"../services/httpUtil\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Box\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={1}>{children}</Box>}\n    </Box>\n  );\n}\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    \"aria-controls\": `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: \"0px\",\n    height: \"100%\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n  rootText: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    textInput: {\n      overflowY: \"hidden\",\n    },\n  },\n  editor: {\n    padding: \"0px 5px\",\n    maxHeight: \"30vh\",\n    overflow: \"auto\",\n    maxWidth: \"100%\",\n    whiteSpace: \"prewrap\",\n    overflowWrap: \"break-word\",\n    wordBreak: \"break-word\",\n  },\n  tab: {\n    // flex: \"1\",\n    // overflow: \"auto\",\n    minHeight: \"160px\",\n    maxWidth: \"100%\",\n  },\n  replyTab: {\n    backgroundColor: \"#fafafa\",\n  },\n  commentTab: {\n    backgroundColor: \"#fef8f0\",\n  },\n  appBarSection: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  sendButton: {\n    marginLeft: \"auto\",\n    minWidth: \"100px\",\n    marginRight: \"10px\",\n  },\n}));\n\nexport default function InputText(props) {\n  const classes = useStyles();\n  const [indexValue, setIndexValue] = useState(0);\n  const [replyState, setReplyState] = useState(EditorState.createEmpty());\n  const [commentState, setCommentState] = useState(EditorState.createEmpty());\n  const handleChange = (event, newValue) => {\n    setIndexValue(newValue);\n  };\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appBarSection}>\n        <Tabs\n          value={indexValue}\n          onChange={handleChange}\n          aria-label=\"simple tabs example\"\n        >\n          <Tab label=\"Reply\" {...a11yProps(0)} />\n          <Tab label=\"Comment\" {...a11yProps(1)} />\n        </Tabs>\n        <Button\n          variant=\"contained\"\n          endIcon={<SendIcon />}\n          className={classes.sendButton}\n          disabled={\n            (indexValue === 0 &&\n              replyState &&\n              replyState.getCurrentContent() &&\n              convertToRaw(replyState.getCurrentContent()).blocks[0].text <\n                1) ||\n            (indexValue === 1 &&\n              commentState &&\n              commentState.getCurrentContent() &&\n              convertToRaw(commentState.getCurrentContent()).blocks[0].text < 1)\n          }\n          onClick={async () => {\n            let body = {\n              body:\n                indexValue === 0\n                  ? draftToHtml(convertToRaw(replyState.getCurrentContent()))\n                  : draftToHtml(convertToRaw(commentState.getCurrentContent())),\n              type: indexValue === 0 ? \"EMAIL\" : \"COMMENT\",\n              visibility: \"PUBLIC\",\n            };\n            try {\n              props.onIsSendingMessage(true);\n              await sendData(`threads/${props.threadId}/messages`, body);\n              props.messagesRefresh();\n            } catch (error) {\n              console.log(error);\n            }\n            setReplyState(EditorState.createEmpty());\n            setCommentState(EditorState.createEmpty());\n            props.onIsSendingMessage(false);\n          }}\n        >\n          Send\n        </Button>\n      </AppBar>\n      <TabPanel\n        id=\"reply-input-section\"\n        value={indexValue}\n        index={0}\n        className={clsx(classes.tab, classes.replyTab)}\n      >\n        <Editor\n          editorState={replyState}\n          onEditorStateChange={(text) => {\n            setReplyState(text);\n          }}\n          editorClassName={classes.editor}\n          toolbar={{\n            options: [\"inline\", \"link\", \"list\"],\n            inline: {\n              inDropdown: false,\n              className: undefined,\n              component: undefined,\n              dropdownClassName: undefined,\n              options: [\"bold\", \"italic\", \"underline\"],\n            },\n          }}\n        />\n      </TabPanel>\n      <TabPanel\n        id=\"comment-input-section\"\n        value={indexValue}\n        index={1}\n        className={clsx(classes.tab, classes.commentTab)}\n      >\n        <Editor\n          editorState={commentState}\n          onEditorStateChange={(text) => {\n            setCommentState(text);\n          }}\n          editorClassName={classes.editor}\n          toolbar={{\n            options: [\"inline\", \"link\", \"list\"],\n            inline: {\n              inDropdown: false,\n              className: undefined,\n              component: undefined,\n              dropdownClassName: undefined,\n              options: [\"bold\", \"italic\", \"underline\"],\n            },\n          }}\n        />\n      </TabPanel>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useQuery, useInfiniteQuery } from \"react-query\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { fetchData, sendData } from \"../services/httpUtil\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MessageContent from \"../components/messageContent\";\nimport ShowCommentReply from \"../components/showCommentReply\";\nimport InputText from \"../components/inputText\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { RefresherComponent } from \"../components/helper\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Waypoint } from \"react-waypoint\";\nimport { ResizableBox } from \"react-resizable\";\nimport \"../components/style/styles.css\";\n// import \"react-resizable/css/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n  grow: {\n    flexGrow: 1,\n    overflow: \"auto\",\n  },\n  input: {\n    width: \"100%\",\n    overflow: \"auto\",\n  },\n  messagesSection: {\n    flex: \"1\",\n    overflow: \"auto\",\n    paddingBottom: \"5px\",\n  },\n  main: {\n    flex: \"1\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    overflow: \"auto\",\n  },\n  cardRoot: {\n    backgroundColor: \"rgba(255, 255, 255, 0)\",\n    boxShadow: \"0px 0px 0px 0px\",\n    height: \"64px\",\n  },\n}));\n\nconst PAGE_SIZE = 5;\n\nexport default function MessageInfo({\n  threadRefetch,\n  selectedThread,\n  onChangeStatus,\n  isChangingThreadStatus,\n}) {\n  const classes = useStyles();\n  const [assigneeMenuAnchorEl, setAssigneeMenuAnchorEl] = useState(null);\n  const [statusMenuAnchorEl, setStatusMenuAnchorEl] = useState(null);\n  const [userAssignee, setUserAssignee] = useState(\"\");\n  const [listOfFilteredUsers, setListOfFilteredUsers] = useState([]);\n  const [changeAssigneeStatus, setChangeAssigneeStatus] = useState(\"\");\n  const [totalMessagesCount, setTotalMessagesCount] = useState(0);\n  const [isSendingMessage, setIsSendingMessage] = useState(false);\n  async function getMoreMessages(queryKey, page = 0) {\n    let data = await fetchData(\n      `threads/${selectedThread?.id}/messages?page=${page}&pageSize=${PAGE_SIZE}`\n    );\n    setTotalMessagesCount(data.totalCount);\n    return { data: data.data, page };\n  }\n\n  const {\n    data: messages,\n    status: messagesStatus,\n    refetch: messagesRefresh,\n    fetchMore: fetchMoreMessages,\n    canFetchMore: canFetchMoreMessages,\n    isFetchingMore: isFetchingMoreMessages,\n  } = useInfiniteQuery({\n    queryKey: `threads/${selectedThread?.id}/messages`,\n    queryFn: getMoreMessages,\n    config: {\n      getFetchMore: (lastGroup, allGroups) =>\n        lastGroup.page * PAGE_SIZE >= totalMessagesCount\n          ? false\n          : lastGroup.page + 1,\n      refetchOnWindowFocus: false,\n      enabled: selectedThread ? true : false,\n    },\n  });\n\n  const { data: threadsStatuses, status: threadsStatusesStatus } = useQuery({\n    queryKey: `threads/status`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n      staleTime: 50000,\n    },\n  });\n\n  const [selectedAssignee, setSelectedAssignee] = useState();\n  useEffect(() => {\n    setSelectedAssignee(\n      selectedThread &&\n        selectedThread.assignee &&\n        selectedThread.assignee.firstName\n        ? `${selectedThread.assignee.firstName} ${selectedThread.assignee.lastName}`\n        : \"Unassigned\"\n    );\n  }, [selectedThread]);\n\n  const handleAssigneeClick = (event) => {\n    setAssigneeMenuAnchorEl(event.currentTarget);\n  };\n\n  const handleAssigneeClose = () => {\n    setAssigneeMenuAnchorEl(null);\n  };\n\n  const { data: users, status: usersStatus } = useQuery({\n    queryKey: `users`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n    },\n  });\n\n  async function changeAssignee(userId, username) {\n    setChangeAssigneeStatus(\"loading\");\n    try {\n      await sendData(\n        `reassign?assigneeId=${userId}&threadId=${selectedThread.id}`\n      );\n      setChangeAssigneeStatus(\"success\");\n      //---in case of success set the assignee\n      setSelectedAssignee(username);\n      threadRefetch();\n    } catch (error) {\n      setChangeAssigneeStatus(\"error\");\n      console.log(error);\n      return null;\n    }\n  }\n\n  useEffect(() => {\n    let filteredUsers;\n    if (userAssignee.length > 2 && users && users.length > 0) {\n      let upperCaseUserAssignee = userAssignee.toUpperCase();\n      filteredUsers = users.filter((user) => {\n        if (user.firstName.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        if (user.lastName.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        if (user.email.toUpperCase().indexOf(upperCaseUserAssignee) > -1) {\n          return true;\n        }\n        return false;\n      });\n      setListOfFilteredUsers(filteredUsers);\n    } else {\n      setListOfFilteredUsers([]);\n    }\n  }, [userAssignee, users]);\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {messages && messages.length > 0 ? (\n            <>\n              {usersStatus === \"loading\" ||\n              changeAssigneeStatus === \"loading\" ? (\n                <CircularProgress color=\"secondary\" />\n              ) : (\n                <Card className={classes.cardRoot}>\n                  <CardHeader\n                    style={{ cursor: \"pointer\" }}\n                    avatar={<AccountBoxIcon />}\n                    title={Boolean(assigneeMenuAnchorEl) ? null : \"Assignee\"}\n                    subheader={\n                      Boolean(assigneeMenuAnchorEl) ? null : selectedAssignee\n                    }\n                    onClick={handleAssigneeClick}\n                  />\n                </Card>\n              )}\n\n              <div className={classes.grow} />\n              {threadsStatusesStatus === \"success\" &&\n              threadsStatuses.length > 0 ? (\n                <Typography\n                  noWrap\n                  style={{ cursor: \"pointer\" }}\n                  onClick={(e) => setStatusMenuAnchorEl(e.currentTarget)}\n                >\n                  {selectedThread.status}\n                </Typography>\n              ) : (\n                <CircularProgress color=\"secondary\" />\n              )}\n\n              <Menu\n                id=\"status-menu\"\n                anchorEl={statusMenuAnchorEl}\n                keepMounted={false}\n                open={Boolean(statusMenuAnchorEl)}\n                onClose={() => setStatusMenuAnchorEl(null)}\n              >\n                {threadsStatuses.map((ts) => {\n                  if (ts === selectedThread.status) return null;\n                  return (\n                    <MenuItem\n                      key={ts}\n                      onClick={() => {\n                        onChangeStatus(ts);\n                        setStatusMenuAnchorEl(null);\n                      }}\n                    >\n                      {`Mark as ${ts}`}\n                    </MenuItem>\n                  );\n                })}\n              </Menu>\n              {/* ---- */}\n\n              <StyledMenu\n                id=\"simple-menu\"\n                anchorEl={assigneeMenuAnchorEl}\n                keepMounted={false}\n                open={Boolean(assigneeMenuAnchorEl)}\n                onClose={handleAssigneeClose}\n                style={{\n                  marginLeft: \"45px\",\n                  marginTop: \"-10px\",\n                }}\n              >\n                <div style={{ padding: \"2px\" }}>\n                  <TextField\n                    placeholder=\"User\"\n                    value={userAssignee}\n                    onChange={(e) => setUserAssignee(e.target.value)}\n                    fullWidth\n                  />\n                </div>\n                {usersStatus === \"loading\" ? (\n                  <CircularProgress />\n                ) : listOfFilteredUsers && listOfFilteredUsers.length > 0 ? (\n                  listOfFilteredUsers.map((user) => {\n                    return (\n                      <div\n                        key={user.id}\n                        style={{\n                          backgroundColor: \"white\",\n                          border: \"1px solid #ffc107\",\n                        }}\n                      >\n                        <MenuItem\n                          onClick={(e) => {\n                            //TODO: set Assignee to selected user\n                            changeAssignee(\n                              user.id,\n                              `${user.firstName} ${user.lastName}`\n                            );\n                            handleAssigneeClose();\n                          }}\n                        >\n                          <Card style={{ boxShadow: \"none\", width: \"100%\" }}>\n                            <CardHeader\n                              avatar={<AccountBoxIcon />}\n                              title={`${user.firstName} ${user.lastName}`}\n                              subheader={user.email}\n                            />\n                          </Card>\n                        </MenuItem>\n                      </div>\n                    );\n                  })\n                ) : null}\n              </StyledMenu>\n            </>\n          ) : null}\n        </Toolbar>\n      </AppBar>\n\n      {isChangingThreadStatus ? (\n        <div style={{ margin: \"auto\" }}>\n          <CircularProgress />\n        </div>\n      ) : messages && messages.length > 0 ? (\n        <div className={classes.main}>\n          <div className={classes.messagesSection}>\n            {messages.map((msgGroup, i) => {\n              return (\n                <React.Fragment key={i}>\n                  {msgGroup.data &&\n                    msgGroup.data.map((msg) => {\n                      switch (msg.type) {\n                        case \"EMAIL\":\n                          return <MessageContent key={msg.id} message={msg} />;\n                        case \"COMMENT\":\n                        default:\n                          return (\n                            <ShowCommentReply key={msg.id} message={msg} />\n                          );\n                      }\n                    })}\n                </React.Fragment>\n              );\n            })}\n            {!isFetchingMoreMessages &&\n            canFetchMoreMessages * PAGE_SIZE < totalMessagesCount ? (\n              <Waypoint onEnter={() => fetchMoreMessages()} />\n            ) : isFetchingMoreMessages ? (\n              <div\n                style={{\n                  margin: \"10px 0px\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <CircularProgress />\n              </div>\n            ) : (\n              <h4\n                style={{\n                  textAlign: \"center\",\n                  color: \"grey\",\n                }}\n              >\n                end of the list\n              </h4>\n            )}\n          </div>\n          <div className={classes.input}>\n            <InputText\n              threadId={selectedThread.id}\n              messagesRefresh={messagesRefresh}\n              onIsSendingMessage={(state) => setIsSendingMessage(state)}\n            />\n          </div>\n        </div>\n      ) : messagesStatus === \"loading\" || isSendingMessage ? (\n        <div style={{ margin: \"auto\" }}>\n          <CircularProgress />\n        </div>\n      ) : messagesStatus === \"error\" ? (\n        <RefresherComponent handleRefresh={messagesRefresh} />\n      ) : (\n        <h2 style={{ textAlign: \"center\" }}>Select a thread to see messages</h2>\n      )}\n    </div>\n  );\n}\n\nconst StyledMenu = withStyles({\n  paper: {\n    backgroundColor: \"#ffffff00\",\n  },\n})((props) => <Menu elevation={0} getContentAnchorEl={null} {...props} />);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    verticalAlign: \"middle\",\n    width: \"100%\",\n  },\n  avatar: {\n    height: \"85px\",\n    width: \"85px\",\n    backgroundColor: theme.palette.primary.main,\n    fontSize: \"40px\",\n  },\n}));\n\nconst ContactProfile = (props) => {\n  const classes = useStyles();\n  const { contactFirstName, contactLastName, email } = props.selectedContact;\n  if (!props.selectedContact) return null;\n  return (\n    <div className={classes.root}>\n      {contactFirstName && contactLastName ? (\n        <Avatar\n          className={classes.avatar}\n        >{`${contactFirstName[0]}${contactLastName[0]}`}</Avatar>\n      ) : null}\n\n      <Typography variant=\"h6\">{`${contactFirstName} ${contactLastName}`}</Typography>\n      <Typography variant=\"subtitle1\">{email}</Typography>\n    </div>\n  );\n};\nexport default ContactProfile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    flex: \"1\",\n    overflow: \"auto\",\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: \"33.33%\",\n    flexShrink: 0,\n  },\n  scroll: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    // width: \"inherit\",\n    maxWidth: \"90%\",\n  },\n}));\n\nexport default function ContactDetails(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = React.useState(\"panel1\");\n  const { selectedContact } = props;\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Accordion\n        expanded={expanded === \"panel1\"}\n        onChange={handleChange(\"panel1\")}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\"\n          style={{ backgroundColor: \"#d4d4d4\" }}\n        >\n          <Typography className={classes.heading}>\n            About this contact\n          </Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <div>\n            <Typography variant=\"subtitle1\">First Name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.contactFirstName\n                ? selectedContact.contactFirstName\n                : \"Unknown\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Last Name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.contactLastName\n                ? selectedContact.contactLastName\n                : \"Unknown\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Email:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.email\n                ? selectedContact.email\n                : \"No Email Address\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Phone number:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.telephone\n                ? selectedContact.telephone\n                : \"No Phone Number\"}\n            </Typography>\n            <br />\n            <Typography variant=\"subtitle1\">Company name:</Typography>\n            <Typography variant=\"subtitle2\">\n              {selectedContact && selectedContact.companyName\n                ? selectedContact.companyName\n                : \"No Company Name\"}\n            </Typography>\n          </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Fade from \"@material-ui/core/Fade\";\nimport ContactProfile from \"../components/contactProfile\";\nimport ContactDetails from \"../components/contactDetails\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst drawerWidth = \"20%\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appbarHieght: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    backgroundColor: theme.palette.primary.main,\n    ...theme.mixins.toolbar,\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    height: \"100vh\",\n    display: \"flex\",\n    flexFlow: \"column\",\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    [theme.breakpoints.down(\"md\")]: {\n      width: \"50vh\",\n    },\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    transitionTimingFunction: \"cubic-bezier(0.6, -0.28, 0.74, 0.05)\",\n    transitionDuration: \"500ms\",\n  },\n  drawerClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(4) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n  },\n  customerInfoSection: {\n    paddingTop: \"5px\",\n    flex: \"1\",\n    overflow: \"auto\",\n    display: \"flex\",\n    flexFlow: \"column\",\n  },\n}));\n\nconst Customer = ({ Contacts }) => {\n  const classes = useStyles();\n  const [openDrawer, setOpenDrawer] = React.useState(false);\n  const [openSnackbar, setOpenSnackbar] = React.useState(false);\n\n  const selectedContact = Contacts && Contacts[0];\n  const handleCloseSnackbar = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n  useEffect(() => {\n    if (!selectedContact) {\n      setOpenDrawer(false);\n    } else {\n      setOpenDrawer(true);\n    }\n  }, [selectedContact]);\n\n  const handleDrawerOpen = () => {\n    !selectedContact ? setOpenSnackbar(true) : setOpenDrawer(true);\n  };\n  const handleDrawerClose = () => {\n    setOpenDrawer(false);\n  };\n  return (\n    <Drawer\n      variant=\"permanent\"\n      anchor=\"right\"\n      className={clsx(classes.drawer, {\n        [classes.drawerOpen]: openDrawer,\n        [classes.drawerClose]: !openDrawer,\n      })}\n      classes={{\n        paper: clsx({\n          [classes.drawerOpen]: openDrawer,\n          [classes.drawerClose]: !openDrawer,\n        }),\n      }}\n    >\n      <div className={classes.appbarHieght}>\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"open drawer\"\n          onClick={handleDrawerOpen}\n          className={clsx(classes.menuButton, {\n            [classes.hide]: openDrawer,\n          })}\n          disabled={!selectedContact || selectedContact.length < 1}\n        >\n          <PersonIcon />\n        </IconButton>\n        <IconButton\n          className={clsx(classes.menuButton, {\n            [classes.hide]: !openDrawer,\n          })}\n          onClick={handleDrawerClose}\n        >\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n      <Fade\n        in={openDrawer}\n        timeout={{ enter: 1000, exit: 500 }}\n        className={clsx({\n          [classes.hide]: !openDrawer,\n        })}\n      >\n        <div\n          style={{\n            flex: \"1\",\n            overflow: \"auto\",\n            display: \"flex\",\n            flexFlow: \"column\",\n          }}\n        >\n          <div\n            className={clsx(classes.customerInfoSection, {\n              [classes.hide]: !openDrawer,\n            })}\n          >\n            <ContactProfile\n              selectedContact={selectedContact ? selectedContact : \"Unknown\"}\n            />\n            <Divider />\n            <ContactDetails\n              selectedContact={selectedContact ? selectedContact : \"Unknown\"}\n            />\n          </div>\n        </div>\n      </Fade>\n      <Snackbar\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n        open={openSnackbar}\n        autoHideDuration={4000}\n        onClose={handleCloseSnackbar}\n      >\n        <Alert severity=\"error\">Contact not selected</Alert>\n      </Snackbar>\n    </Drawer>\n  );\n};\n\nexport default Customer;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\nimport SearchBox from \"../components/searchBox\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FirstCharOfName from \"../components/firstCharOfName\";\nimport FilterMenuForThreads from \"../components/filterMenuForThreads\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Skeleton from \"@material-ui/lab/Skeleton\";\nimport Box from \"@material-ui/core/Box\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { fetchData, sendData } from \"../services/httpUtil\";\nimport { useQuery } from \"react-query\";\nimport { RefresherComponent } from \"../components/helper\";\nimport MessageInfo from \"./messageInfo\";\nimport Customer from \"./customer\";\n\nimport { ResizableBox } from \"react-resizable\";\nimport \"../components/style/styles.css\";\n// import \"react-resizable/css/styles.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    //overflow: \"hidden\",\n    width: \"100%\",\n    height: \"100vh\",\n    display: \"flex\",\n  },\n  list: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    position: \"relative\",\n    overflow: \"auto\",\n    height: \"calc(100vh - 66px)\",\n  },\n  listSection: {\n    backgroundColor: \"inherit\",\n  },\n  ul: {\n    backgroundColor: \"inherit\",\n    padding: 0,\n  },\n  inline: {\n    display: \"inline\",\n  },\n  searchInputOpen: {\n    width: \"80%\",\n    overflow: \"hidden\",\n    backgroundColor: \"#cecece\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  searchInputClose: {\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: \"hidden\",\n    width: theme.spacing(5) + 1,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(5) + 1,\n    },\n  },\n  hide: {\n    display: \"none\",\n  },\n  tools: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    width: \"100%\",\n    backgroundColor: theme.palette.primary.main,\n    boxShadow: \"0px 0px 0px 0px\",\n  },\n  toolbar: {\n    // display: \"flex\",\n    // justifyContent: \"center\",\n    width: \"100%\",\n  },\n  space: {\n    flexGrow: 10,\n  },\n  threads: {\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"35vh\",\n      overflow: \"auto\",\n    },\n  },\n  messageInfo: {\n    height: \"100vh\",\n    [theme.breakpoints.down(\"sm\")]: {\n      height: \"55vh\",\n      overflow: \"auto\",\n    },\n  },\n  content: {\n    width: \"100%\",\n  },\n}));\n\nconst Threads = ({ channelID }) => {\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const [isChangingThreadStatus, setIsChangingThreadStatus] = useState(false);\n  const [showSearchInput, setShowSearchInput] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [searchByQuery, setSearchByQuery] = useState(false);\n  const [windowHeight, setWindowHeight] = useState(window.innerHeight);\n  useEffect(() => {\n    window.addEventListener(\"resize\", () =>\n      setWindowHeight(window.innerHeight)\n    );\n  }, []);\n\n  const { data: threadStatuses, status: threadStatusesStatus } = useQuery({\n    queryKey: `threads/status`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n      staleTime: 50000,\n    },\n  });\n  useEffect(() => {\n    if (threadStatusesStatus === \"success\" && threadStatuses.length > 0) {\n      setFilter(threadStatuses[0]);\n    }\n  }, [threadStatuses, threadStatusesStatus]);\n\n  //TODO: in case of error render an error message with possibility to refresh\n  const {\n    data: fetchedThreads,\n    status: threadsStatus,\n    refetch: threadRefetch,\n  } = useQuery({\n    queryKey: `${\n      !showSearchInput\n        ? `channels/${channelID}/threads?page=0&pageSize=10&status=${filter}`\n        : showSearchInput && searchByQuery\n        ? `channels/${channelID}/threads/search?searchQuery=${searchQuery}`\n        : null\n    }`,\n    queryFn: fetchData,\n    config: {\n      refetchOnWindowFocus: false,\n      enabled: channelID ? true : false,\n    },\n  });\n\n  const handleToggleSearchInput = () => {\n    setShowSearchInput(!showSearchInput);\n  };\n\n  const [selectedThread, setSelectedThread] = useState();\n\n  useEffect(() => {\n    if (\n      threadsStatus === \"success\" &&\n      fetchedThreads &&\n      fetchedThreads.data &&\n      fetchedThreads.data.length > 0\n    ) {\n      setSelectedThread(fetchedThreads.data[0]);\n    } else {\n      setSelectedThread();\n    }\n  }, [fetchedThreads, threadsStatus]);\n\n  async function changeThreadStatus(status) {\n    setIsChangingThreadStatus(true);\n    try {\n      await sendData(`threads/${selectedThread.id}/status?status=${status}`);\n      threadRefetch();\n    } catch (error) {\n      console.log(error);\n    }\n    setIsChangingThreadStatus(false);\n  }\n\n  return (\n    <>\n      <main className={classes.content}>\n        <div className={classes.root}>\n          <ResizableBox\n            className=\"box\"\n            height={windowHeight}\n            width={300}\n            axis=\"x\"\n            resizeHandles={[\"e\"]}\n          >\n            <div>\n              <AppBar position=\"sticky\">\n                <Toolbar className={classes.toolbar}>\n                  <Zoom in={!showSearchInput}>\n                    <Paper\n                      className={clsx({\n                        [classes.tools]: !showSearchInput,\n                        [classes.hide]: showSearchInput,\n                      })}\n                    >\n                      <FilterMenuForThreads\n                        onMenuChange={(selectedType) => {\n                          setFilter(selectedType);\n                        }}\n                        threadStatuses={threadStatuses}\n                        threadStatusesStatus={threadStatusesStatus}\n                      />\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={handleToggleSearchInput}\n                        size=\"small\"\n                      >\n                        <SearchIcon />\n                      </IconButton>\n                    </Paper>\n                  </Zoom>\n                  <Zoom in={showSearchInput}>\n                    <Paper\n                      className={clsx({\n                        [classes.tools]: showSearchInput,\n                        [classes.hide]: !showSearchInput,\n                      })}\n                    >\n                      <SearchBox\n                        value={searchQuery}\n                        onToggle={handleToggleSearchInput}\n                        show={showSearchInput}\n                        onChange={(e) => {\n                          setSearchByQuery(false);\n                          setSearchQuery(e.target.value);\n                        }}\n                        onSearchQueryClick={() => setSearchByQuery(true)}\n                      />\n                    </Paper>\n                  </Zoom>\n                </Toolbar>\n              </AppBar>\n\n              <Paper variant={\"outlined\"}>\n                <List className={classes.list}>\n                  {threadsStatus === \"loading\" ? (\n                    [...Array(20)].map((e, i) => (\n                      <React.Fragment key={i}>\n                        <ListItem alignItems=\"flex-start\" key={i}>\n                          <Box width={\"100%\"}>\n                            <Skeleton />\n                            <Skeleton width=\"60%\" />\n                          </Box>\n                        </ListItem>\n                        <Divider variant=\"middle\" component=\"li\" />\n                      </React.Fragment>\n                    ))\n                  ) : threadsStatus === \"success\" &&\n                    fetchedThreads &&\n                    fetchedThreads.data &&\n                    fetchedThreads.data.length < 1 ? (\n                    <h2 style={{ textAlign: \"center\", color: \"#5b5b5b\" }}>\n                      No Thread\n                    </h2>\n                  ) : threadsStatus === \"success\" &&\n                    fetchedThreads &&\n                    fetchedThreads.data ? (\n                    fetchedThreads.data.map((thread) => {\n                      let badge = thread.subject.split(\" \");\n                      if (badge.length < 2) {\n                        badge.push(thread.subject[2]);\n                      }\n                      return (\n                        <React.Fragment key={thread.id}>\n                          <ListItem\n                            button\n                            alignItems=\"flex-start\"\n                            selected={selectedThread?.id === thread.id}\n                            onClick={() => setSelectedThread(thread)}\n                          >\n                            <ListItemAvatar>\n                              <FirstCharOfName\n                                size=\"small\"\n                                firstName={badge[0]}\n                                lastName={badge[1]}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={thread.subject}\n                              secondary={\n                                <React.Fragment>\n                                  <Typography\n                                    component=\"span\"\n                                    variant=\"body2\"\n                                    className={classes.inline}\n                                    color=\"textPrimary\"\n                                  >\n                                    {thread.tag}\n                                    {\" - \"}\n                                  </Typography>\n                                  {thread.status}\n                                </React.Fragment>\n                              }\n                            />\n                          </ListItem>\n                          <Divider component=\"li\" />\n                        </React.Fragment>\n                      );\n                    })\n                  ) : threadsStatus === \"error\" ? (\n                    <RefresherComponent handleRefresh={threadRefetch} />\n                  ) : null}\n                </List>\n              </Paper>\n            </div>\n          </ResizableBox>\n          <div style={{ flex: \"1\" }}>\n            <MessageInfo\n              threadRefetch={threadRefetch}\n              selectedThread={selectedThread}\n              onChangeStatus={changeThreadStatus}\n              isChangingThreadStatus={isChangingThreadStatus}\n            />\n          </div>\n        </div>\n      </main>\n      <Customer Contacts={selectedThread?.contacts} />\n    </>\n  );\n};\n\nexport default Threads;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Channels from \"./layouts/channels\";\nimport Threads from \"./layouts/threads\";\nimport { fetchData } from \"./services/httpUtil\";\nimport { useQuery } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nconst drawerWidth = \"15%\";\n\nconst useStyles = makeStyles((theme) => ({\n  smallScreenSection: {\n    backgroundColor: \"#f1f1f1\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    marginTop: \"20%\",\n    textAlign: \"center\",\n  },\n  root: {\n    display: \"flex\",\n  },\n  menuButton: {\n    width: 42,\n    height: 42,\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: \"nowrap\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(0),\n    height: \"100vh\",\n  },\n  backdropRoot: {\n    display: \"flex\",\n    \"& > * + *\": {\n      marginLeft: theme.spacing(1),\n      alignItems: \"center\",\n      justify: \"center\",\n      height: \"100vh\",\n    },\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: \"#fff\",\n  },\n}));\n\nconst App = () => {\n  const classes = useStyles();\n  const isSmallScreen = useMediaQuery(\"(min-width:700px)\");\n  const [selectedChannelID, setSelectedChannelID] = useState();\n\n  const {\n    data: fetchedChannels,\n    status: channelsStatus,\n    refetch: channelsRefetch,\n  } = useQuery({\n    queryKey: \"channels\",\n    queryFn: fetchData,\n    config: { refetchOnWindowFocus: false },\n  });\n\n  useEffect(() => {\n    if (channelsStatus === \"success\" && fetchedChannels.length > 0) {\n      setSelectedChannelID(fetchedChannels[0].id);\n    }\n  }, [channelsStatus, fetchedChannels]);\n\n  useEffect(() => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\n\n    var urlencoded = new URLSearchParams();\n    urlencoded.append(\"password\", \"block-monitored-policebox\");\n    urlencoded.append(\"username\", \"ashkala\");\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: myHeaders,\n      body: urlencoded,\n      redirect: \"follow\",\n    };\n\n    fetch(\"https://app.rerumapp.uk/staging/authenticate\", requestOptions)\n      .then((response) => response.text())\n      .then((result) => localStorage.setItem(\"TOKEN\", JSON.parse(result).token))\n      .catch((error) => console.log(\"error\", error));\n  }, []);\n  if (!isSmallScreen) {\n    return (\n      <div className={classes.smallScreenSection}>\n        <h3>The page cannot be displayed on this screen</h3>\n      </div>\n    );\n  }\n  return (\n    <div className={classes.root}>\n      {process.env.REACT_APP_ENV === \"DEV\" ? <ReactQueryDevtools /> : null}\n      <CssBaseline />\n      <Channels\n        status={channelsStatus}\n        refetch={channelsRefetch}\n        channels={fetchedChannels}\n        onSelectedChannelChange={(channelID) => {\n          setSelectedChannelID(channelID);\n        }}\n        selectedChannelId={selectedChannelID}\n      />\n\n      <Threads channelID={selectedChannelID} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"font-awesome/css/font-awesome.css\";\nimport \"typeface-roboto\";\nimport { red, amber } from \"@material-ui/core/colors\";\n\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\n\nimport { setDefaultTranslations, setDefaultLanguage } from \"react-multi-lang\";\n// @ts-ignore\nimport en from \"./languages/en.json\";\n// @ts-ignore\nimport fr from \"./languages/fr.json\";\n\nsetDefaultTranslations({ en, fr });\nsetDefaultLanguage(\"en\");\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      dark: \"#d67200\",\n      main: \"#f69321\",\n      light: \"#ffb560\",\n    },\n\n    secondary: {\n      main: amber[500],\n    },\n  },\n});\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}